{"version":3,"sources":["forms/signIn.form.jsx","components/auth/email.signIn.tsx","components/auth/google.signIn.tsx","components/signInCard.tsx","screens/signIn.screen.tsx"],"names":["SignInForm","handleSubmit","e","preventDefault","props","form","signIn","validateFields","err","values","email","password","this","inProgress","getFieldDecorator","onSubmit","className","id","Item","rules","required","message","type","prefix","placeholder","autoComplete","autoCapitalize","autoCorrect","htmlType","icon","href","React","Component","connect","state","auth","create","name","dispatch","signInWithEmailAction","token","signInWithGoogleAction","startSignInProcess","SIGN_IN_INITIATED","signInFailed","SIGNING_IN_FAILED","clientId","GOOGLE_OAUTH_CLIENT_ID","render","renderProps","onClick","disabled","style","backgroundColor","size","buttonText","onSuccess","response","googleId","tokenId","onFailure","cookiePolicy","Title","isAuthenticated","user","to","COMPANY_PORTAL_HOME_PATH","STUDENT_PORTAL_HOME_PATH","HOME_PATH","SIGN_UP_PATH_STUDENT","SIGN_UP_PATH_COMPANY","SignInScreen"],"mappings":"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","file":"static/js/41.1b000143.chunk.js","sourcesContent":["import React from 'react';\nimport {Form, Icon, Input, Button} from 'antd';\nimport {connect} from 'react-redux';\n\nclass SignInForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    const {form, signIn} = this.props;\n    const {validateFields} = form;\n    validateFields((err, values) => {\n      if (!err) {\n        signIn(values.email, values.password);\n      }\n    });\n  };\n\n  render() {\n    const {form, inProgress} = this.props;\n    const {getFieldDecorator} = form;\n\n    return (\n      <Form onSubmit={this.handleSubmit} className='login-form' id='sign-in-form'>\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [\n              {required: true, message: 'Please input your email!'},\n              {type: 'email', message: 'Enter a valid email!'},\n            ],\n          })(\n            <Input\n              prefix={<Icon type='user' className='input-prefix' />}\n              placeholder='Email'\n              type='email'\n              autoComplete='username email'\n              autoCapitalize='none'\n              autoCorrect='off'\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{required: true, message: 'Please input your Password!'}],\n          })(\n            <Input\n              prefix={<Icon type='lock' className='input-prefix' />}\n              type='password'\n              placeholder='Password'\n              autoComplete='password'\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            htmlType='submit'\n            className='login-form-button'\n            type='primary'\n            icon={inProgress ? 'loading' : 'login'}>\n            Sign In\n          </Button>\n          <a className='login-form-forgot' href='/forget-password'>\n            Forgot password\n          </a>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  inProgress: state.auth.inProgress,\n});\n\nexport default connect(mapStateToProps)(Form.create({name: 'sign-in'})(SignInForm));\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\n\nimport SignInForm from 'forms/signIn.form';\nimport {signInWithEmailAction} from 'actions/auth.action';\n\ninterface IStateProps {}\n\ninterface IDispatchProps {\n  signIn(email: string, password: string): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst EmailSignIn: FC<IProps> = (props: IProps) => {\n  return (\n    // @ts-ignore\n    <SignInForm signIn={(email: string, password: string) => { props.signIn(email, password); }} />\n  );\n};\n\n// +918191921292\n\nconst mapStateToProps = (): IStateProps => ({});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signIn: (email, password) => dispatch(signInWithEmailAction(email, password)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  // @ts-ignore\n)(EmailSignIn);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {GoogleLogin} from 'react-google-login';\n\nimport {GOOGLE_OAUTH_CLIENT_ID} from 'constants/credentials.constant';\nimport {IReduxState} from 'reducers';\nimport {signInWithGoogleAction} from 'actions/auth.action';\nimport {IAuthState} from 'reducers/auth.reducer';\nimport {IGoogleSignInResponseHacked} from 'types/api.type';\nimport {SIGN_IN_INITIATED, SIGNING_IN_FAILED} from 'actions';\n\n// eslint-disable-next-line no-undef\ninterface IStateProps extends Partial<IAuthState> {\n  inProgress: boolean;\n}\n\ninterface IDispatchProps {\n  signIn(id: string, token: string): any;\n  startSignInProcess(): any;\n  signInFailed(): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst GoogleSignIn: FC<IProps> = (props: IProps) => {\n  const {inProgress} = props;\n\n  return (\n    <GoogleLogin\n      clientId={GOOGLE_OAUTH_CLIENT_ID || ''}\n      render={renderProps => (\n        <Button\n          onClick={() => {\n            props.startSignInProcess();\n            renderProps.onClick();\n          }}\n          disabled={renderProps.disabled}\n          type='primary'\n          icon={inProgress ? 'loading' : 'google'}\n          className='full-width'\n          style={{backgroundColor: renderProps.disabled ? '#eeeeee' : '#000000'}}\n          size='large'>\n          Sign In With Google\n        </Button>\n      )}\n      buttonText='Login'\n      // @ts-ignore\n      onSuccess={(response: IGoogleSignInResponseHacked) => {\n        props.signIn(response.googleId, response.tokenId);\n      }}\n      onFailure={() => {\n        props.signInFailed();\n      }}\n      cookiePolicy='single_host_origin'\n    />\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  inProgress: state.auth.inProgress,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signIn: (id, token) => dispatch(signInWithGoogleAction(id, token)),\n  startSignInProcess: () => dispatch({type: SIGN_IN_INITIATED}),\n  signInFailed: () => dispatch({type: SIGNING_IN_FAILED}),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GoogleSignIn);\n","import React, {FC} from 'react';\nimport {Button, Typography} from 'antd';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {IReduxState} from 'reducers';\nimport {IUserMeta} from 'types/api.type';\nimport {\n  COMPANY_PORTAL_HOME_PATH,\n  HOME_PATH, SIGN_UP_PATH_COMPANY,\n  SIGN_UP_PATH_STUDENT,\n  STUDENT_PORTAL_HOME_PATH,\n} from 'constants/routes/main.paths.constant';\nimport EmailSignIn from './auth/email.signIn';\nimport GoogleSignIn from './auth/google.signIn';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n  user: IUserMeta | undefined;\n}\n\ninterface IProps extends IStateProps {}\n\nconst {Title} = Typography;\n\nconst SignInCard: FC<IProps> = ({isAuthenticated, user}: IProps) => {\n  console.log(user,\"gg\");\n  if (isAuthenticated && user) {\n    switch (user.type) {\n      case 'C':\n        return <Redirect to={COMPANY_PORTAL_HOME_PATH} />;\n      case 'S':\n        return <Redirect to={STUDENT_PORTAL_HOME_PATH} />;\n      default:\n        return <Redirect to={HOME_PATH} />;\n    }\n  }\n\n  return (\n    <div>\n      <Title>Sign In</Title>\n      <GoogleSignIn />\n      <br />\n      <br />\n      <div className='center'>OR</div>\n      <br />\n      <EmailSignIn />\n      <br />\n      <Link to={SIGN_UP_PATH_STUDENT}>\n        <Button type='dashed' className='full-width' icon='user-add' size='large'>\n          Create Student Account\n        </Button>\n      </Link>\n      <br />\n      <br />\n      <Link to={SIGN_UP_PATH_COMPANY}>\n        <Button type='dashed' className='full-width' icon='user-add' size='large'>\n          Create Company Account\n        </Button>\n      </Link>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(SignInCard);\n","import React, {FC} from 'react';\nimport {Card} from 'antd';\n\nimport SignInCard from 'components/signInCard';\n\ninterface IProps {}\n\nconst SignInScreen: FC<IProps> = () => (\n  <div className='full-page center-hv grey lighten-3'>\n    <Card className='signinScreen-card'>\n      <SignInCard />\n    </Card>\n  </div>\n);\n\nexport default SignInScreen;\n"],"sourceRoot":""}