{"version":3,"sources":["constants/routes/main.paths.constant.ts","components/auth/google.signOut.tsx","components/auth/default.signOut.tsx","components/signOutButton.tsx","components/userAccountButton.tsx","screens/404.screen.tsx","actions/index.ts","assets/svgs/jamia-logo.svg","helpers/notification.helper.ts","reducers/auth.reducer.ts","reducers/navigator.reducer.ts","constants/routes/main.routes.constant.ts","reducers/student.reducer.ts","reducers/index.ts","components/headerPills.tsx","components/mobileDrawer.tsx","components/appHeader.tsx","components/screen.tsx","components/footer.tsx","components/a2hsPrompt.tsx","main.tsx","App.tsx","serviceWorker.js","index.js","helpers/api/loader.api.helper.ts","constants/localStorage.constant.ts","constants/externalLinks.constant.ts","components/xLink.tsx","helpers/screen.helper.ts","actions/auth.action.ts","helpers/api/api.helper.ts","constants/credentials.constant.ts","screens/loading.screen.tsx"],"names":["HOME_PATH","CONTACT_PATH","SIGN_IN_PATH","SIGN_UP_PATH","PRIVACY_POLICY_PATH","TERMS_AND_CONDITION_PATH","STUDENT_PORTAL_HOME_PATH","COMPANY_PORTAL_HOME_PATH","EMAIL_VERIFICATION_PATH","withRouter","connect","state","isAuthenticated","auth","dispatch","signOut","redirect","signOutAction","props","history","clientId","GOOGLE_OAUTH_CLIENT_ID","onLogoutSuccess","render","renderProps","onClick","redirectFunction","push","icon","type","signedWith","to","size","NotFoundScreen","className","status","title","subTitle","extra","SIGN_IN_INITIATED","SIGN_IN_SUCCESS","SIGN_OUT","SIGNING_IN_FAILED","CONNECTED_WITH_SERVER","COULD_NOT_CONNECT_TO_SERVER","STUDENT_EXTRA_DATA_LOADED","module","exports","openNotificationWithIcon","message","desc","description","top","htmlNotification","reactHtmlParser","replace","signInAgainNotification","errorGettingUserInfoNotification","signInSuccessNotification","name","signOutSuccessNotification","signingInErrorNotification","cannotConnectToServerNotification","userExistsWithThisEmail","email","signUpSuccessfullNotification","signUpFailedNotification","detail","initialState","inProgress","routes","path","screen","lazy","exact","connected","combineReducers","action","setState","override","user","navigator","student","extraDetails","data","Item","mode","style","height","border","key","Title","MobileDrawer","showDrawer","visible","onClose","window","addEventListener","this","removeEventListener","toRender","selectScreen","placement","closable","level","React","Component","JamiaLogo","require","AppHeader","handelScroll","prevScrollPos","currentScrollPos","pageYOffset","document","body","html","documentElement","pageHeight","Math","max","scrollHeight","offsetHeight","clientHeight","innerHeight","zIndex","flex","xs","md","xxl","justifyContent","src","alt","color","fontSize","Screen","ScreenComponent","useEffect","fallback","Footer","href","UNIVERSITY_PLACEMENT_CELL","JAMIA_MILLIA_ISLAMIA","PRIVACY_POLICY","TERMS_AND_CONDITION","packageJson","version","REPO_LINK","BUG_REPORT","FEATURE_REQUEST","Text","A2hsPrompt","componentDidMount","beforeInstall","onInstall","componentWillUnmount","e","preventDefault","deferredPrompt","installPrompt","setTimeout","isA2HSVisible","handelNotNow","handelPWAInstallPrompt","prompt","then","choiceResult","outcome","installing","success","toggle","AttentionSeeker","centered","footer","textAlign","loading","width","checkUser","checkUserAction","map","route","index","undefined","component","toString","store","createStore","rootReducer","applyMiddleware","thunk","App","updateDimensions","scrollTop","innerWidth","scrollTo","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","axios","defaults","baseURL","BASE_URL","loadOpenUrl","url","a","Promise","resolve","reject","res","err","getAccessToken","reactLocalStorage","getObject","API_TOKENS","accessToken","expires","Date","currentTime","tokens","access","method","refresh","newToken","setObject","code","er","loadSecureUrl","Authorization","SIGNED_IN_TYPE","XLink","children","newLine","target","rel","deviceType","sm","lg","xl","device","fakeRedirect","saveToken","token","saveSignIn","silent","getState","set","makeUserSignIn","apiCall","signInWithEmailAction","password","signInWithEmailAPI","signInWithGoogleAction","id","googleToken","signInWithGoogleAPI","signIn","account","ping","pingAPI","getUserMetaDetailAPI","localStorage","clear","remove","signUpStudentAPI","contactFormAPI","doesUserExistsAPI","params","verifyEmailAPI","hash","resendVerificationMailAPI","GOOGLE_RECAPTCHA_KEY","LoadingScreen","tip"],"mappings":"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","file":"static/js/main.4a654aae.chunk.js","sourcesContent":["export const HOME_PATH = '/';\nexport const CONTACT_PATH = '/contact/';\nexport const SIGN_IN_PATH = '/sign-in/';\nexport const SIGN_UP_PATH = '/sign-up/';\n\nexport const PRIVACY_POLICY_PATH = '/privacy-policy/';\nexport const TERMS_AND_CONDITION_PATH = '/terms-and-conditions/';\n\nexport const STUDENT_PORTAL_HOME_PATH = '/portal/student/';\nexport const COMPANY_PORTAL_HOME_PATH = '/portal/company/';\n\nexport const EMAIL_VERIFICATION_PATH = '/verification/email/:hash';\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {GoogleLogout} from 'react-google-login';\nimport {withRouter} from 'react-router-dom';\n\nimport {GOOGLE_OAUTH_CLIENT_ID} from 'constants/credentials.constant';\nimport {IReduxState} from 'reducers';\nimport {signOutAction} from 'actions/auth.action';\n\n// eslint-disable-next-line no-undef\ninterface IStateProps {}\n\ninterface IDispatchProps {\n  signOut(redirect: any): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  history: any;\n  redirect: boolean;\n}\n\nconst GoogleSignOut: FC<IProps> = (props: IProps) => {\n  const {history, redirect} = props;\n\n  return (\n    <GoogleLogout\n      clientId={GOOGLE_OAUTH_CLIENT_ID || ''}\n      onLogoutSuccess={() => {}}\n      render={renderProps => (\n        <Button\n          onClick={() => {\n            const redirectFunction = redirect ? history.push : () => {};\n            props.signOut(redirectFunction);\n            renderProps.onClick();\n          }}\n          icon='logout'\n          type='link'>\n          Sign Out\n        </Button>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signOut: redirect => dispatch(signOutAction(redirect)),\n});\n\nexport default withRouter(\n  // @ts-ignore\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(GoogleSignOut),\n);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {withRouter} from 'react-router-dom';\n\nimport {signOutAction} from 'actions/auth.action';\n\ninterface IStateProps {}\n\ninterface IDispatchProps {\n  signOut(redirect: any): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  history: {\n    push: any;\n  };\n  redirect: boolean;\n}\n\nconst DefaultSignOut: FC<IProps> = ({signOut, history, redirect = true}: IProps) => (\n  <Button\n    onClick={() => {\n      const redirectFunction = redirect ? history.push : () => {};\n      signOut(redirectFunction);\n    }}\n    icon='logout'\n    type='link'>\n    Sign Out\n  </Button>\n);\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state: any): IStateProps => ({});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signOut: redirect => dispatch(signOutAction(redirect)),\n});\n\nexport default withRouter(\n  // @ts-ignore\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(DefaultSignOut),\n);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\n\nimport {ISignInOptions} from 'types/common.type';\nimport {IReduxState} from 'reducers';\nimport GoogleSignOut from './auth/google.signOut';\nimport DefaultSignOut from './auth/default.signOut';\n\ninterface IStateProps {\n  signedWith: ISignInOptions;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  redirect?: boolean;\n}\n\nconst SignOutButton: FC<IProps> = (props: IProps) => {\n  const {signedWith = false, redirect = true} = props;\n\n  switch (signedWith) {\n    case 'G':\n      return <GoogleSignOut redirect={redirect} />;\n    case 'E':\n    case 'U':\n    default:\n      return <DefaultSignOut redirect={redirect} />;\n  }\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  signedWith: state.auth.signedWith,\n});\n\nexport default connect(mapStateToProps)(SignOutButton);\n","import React, {FC} from 'react';\nimport {Button} from 'antd';\nimport {connect} from 'react-redux';\n\nimport {Link} from 'react-router-dom';\nimport {IReduxState} from 'reducers';\nimport {SIGN_IN_PATH} from 'constants/routes/main.paths.constant';\nimport SignOutButton from './signOutButton';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst UserAccountButton: FC<IProps> = (props: IProps) => {\n  const {isAuthenticated} = props;\n\n  if (isAuthenticated) return <SignOutButton />;\n\n  return (\n    <Link to={SIGN_IN_PATH}>\n      <Button type='primary' size='large' icon='login'>\n        Sign In\n      </Button>\n    </Link>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(UserAccountButton);\n","import React, {FC} from 'react';\nimport {Result, Button} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\n\ninterface IProps {}\n\nconst NotFoundScreen: FC<IProps> = () => (\n  <div className='full-page center-hv'>\n    <Result\n      status='404'\n      title='404'\n      subTitle='Sorry, the page you visited does not exist.'\n      extra={(\n        <Link to={HOME_PATH}>\n          <Button type='primary'>Back Home</Button>\n        </Link>\n)}\n    />\n  </div>\n);\n\nexport default NotFoundScreen;\n","// Auth\nexport const SIGN_IN_INITIATED = 'SIGN_IN_INITIATED';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGNING_IN_FAILED = 'SIGNING_IN_FAILED';\n\n// Navigator\nexport const CONNECTED_WITH_SERVER = 'CONNECTED_WITH_SERVER';\nexport const COULD_NOT_CONNECT_TO_SERVER = 'COULD_NOT_CONNECT_TO_SERVER';\n\n// Student\nexport const STUDENT_EXTRA_DATA_LOADED = 'STUDENT_EXTRA_DATA_LOADED';\n","module.exports = __webpack_public_path__ + \"static/media/jamia-logo.1b80d421.svg\";","import {notification} from 'antd';\nimport reactHtmlParser from 'react-html-parser';\n\nexport const openNotificationWithIcon = (\n  type: 'warning' | 'success' | 'error' | 'info',\n  message: string,\n  desc: string = '',\n): void => {\n  // @ts-ignore\n  notification[type]({\n    message,\n    description: desc,\n    top: 70,\n  });\n};\nexport const htmlNotification = (\n  type: 'warning' | 'success' | 'error',\n  message: string,\n  desc: string = '',\n): void => {\n  openNotificationWithIcon(\n    type,\n    message,\n    // @ts-ignore\n    reactHtmlParser(desc.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')),\n  );\n};\n\nexport const signInAgainNotification = () =>\n  openNotificationWithIcon(\n    'warning',\n    'Please, SignIn Again',\n    'We SignOut user after 24hr of login',\n  );\nexport const errorGettingUserInfoNotification = () =>\n  openNotificationWithIcon(\n    'error',\n    'Please, SignIn Again',\n    'We are having error in getting your info',\n  );\nexport const signInSuccessNotification = (name: string) =>\n  openNotificationWithIcon('success', `Welcome ${name}`, 'You successfully signed in.');\n\nexport const signOutSuccessNotification = () =>\n  openNotificationWithIcon(\n    'success',\n    'Thank you for giving your time.',\n    'You successfully signed out.',\n  );\n\nexport const signingInErrorNotification = (\n  message: string = 'An unknown error occurred during sign in',\n) => openNotificationWithIcon('error', message, 'Create a new account.');\n\nexport const signUpWithGoogleFailed = () =>\n  openNotificationWithIcon('error', 'Sign Up with Google failed', 'Please try again.');\n\nexport const cannotConnectToServerNotification = () => {};\n\nexport const userExistsWithThisEmail = (email: string) =>\n  openNotificationWithIcon(\n    'error',\n    `Email ${email} is associated with another account.`,\n    'Try signing in or try forgetting password.',\n  );\n\nexport const signUpSuccessfullNotification = () =>\n  openNotificationWithIcon('success', 'Account created you successfully');\n\nexport const signUpFailedNotification = (detail: string) =>\n  htmlNotification('error', 'Failed to create account', detail);\n\nexport const apiErrorNotification = (\n  type: 'warning' | 'success' | 'error',\n  message: string,\n  error: any,\n): void => {\n  if (error.data !== undefined) {\n    const errorData = error.data.detail;\n    if (typeof errorData === 'string') openNotificationWithIcon(type, message, errorData);\n    else {\n      const errorDetail = Object.keys(errorData).map((errorO: any) => {\n        return errorO.map((errorOO: any) => {\n          return `${errorOO}\\n`;\n        });\n      });\n\n      htmlNotification(type, message, `The following error occurred\\n${errorDetail}`);\n    }\n  } else {\n    openNotificationWithIcon(type, message, 'An unknown error occurred');\n  }\n};\n","import {IReducerAction, ISignInOptions} from 'types/common.type';\nimport {SIGN_IN_INITIATED, SIGN_IN_SUCCESS, SIGN_OUT, SIGNING_IN_FAILED} from 'actions';\nimport {IUserMeta} from 'types/api.type';\n\nexport interface IAuthState {\n  isAuthenticated: boolean;\n  inProgress: boolean;\n  user?: IUserMeta;\n  signedWith: ISignInOptions;\n}\n\nconst initialState: IAuthState = {\n  isAuthenticated: false,\n  inProgress: false,\n  signedWith: 'U',\n};\n\nexport const auth = (state: IAuthState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<IAuthState>): IAuthState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case SIGN_IN_SUCCESS:\n      return setState({\n        isAuthenticated: true,\n        user: action.user,\n        signedWith: action.signedWith,\n        inProgress: false,\n      });\n\n    case SIGN_IN_INITIATED:\n      return {\n        ...initialState,\n        inProgress: true,\n      };\n\n    case SIGN_OUT:\n      return initialState;\n\n    case SIGNING_IN_FAILED:\n      return setState({inProgress: false});\n\n    default:\n      return state;\n  }\n};\n","import {IReducerAction, IRoute} from 'types/common.type';\nimport {COMMON_ROUTES} from 'constants/routes/main.routes.constant';\nimport {CONNECTED_WITH_SERVER, COULD_NOT_CONNECT_TO_SERVER} from 'actions';\n\nexport interface INavigatorState {\n  routes: Array<IRoute>;\n  connected: boolean | null;\n}\n\nconst initialState: INavigatorState = {\n  routes: COMMON_ROUTES,\n  connected: null,\n};\n\nexport const navigator = (state: INavigatorState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<INavigatorState>): INavigatorState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case CONNECTED_WITH_SERVER:\n      return setState({connected: true});\n    case COULD_NOT_CONNECT_TO_SERVER:\n      return setState({connected: false});\n\n    default:\n      return state;\n  }\n};\n","import {lazy} from 'react';\nimport {IRoute} from '../../types/common.type';\nimport {\n  COMPANY_PORTAL_HOME_PATH,\n  CONTACT_PATH, EMAIL_VERIFICATION_PATH,\n  HOME_PATH, PRIVACY_POLICY_PATH,\n  SIGN_IN_PATH,\n  SIGN_UP_PATH,\n  STUDENT_PORTAL_HOME_PATH, TERMS_AND_CONDITION_PATH,\n} from './main.paths.constant';\n\nexport const COMMON_ROUTES: Array<IRoute> = [\n  {\n    path: HOME_PATH,\n    title: 'Welcome to University Placement Cell, Jamia Millia Islamia',\n    screen: lazy(() => import('../../screens/home.screen')),\n  },\n  {\n    path: CONTACT_PATH,\n    title: 'Contact US || UPC JMI',\n    screen: lazy(() => import('../../screens/contact.screen')),\n  },\n  {\n    path: STUDENT_PORTAL_HOME_PATH,\n    title: 'Student Home || UPC JMI',\n    screen: lazy(() => import('../../screens/student/main.student.screen')),\n    exact: false\n  },\n  {\n    path: COMPANY_PORTAL_HOME_PATH,\n    title: 'Company Home || UPC JMI',\n    screen: lazy(() => import('../../screens/company/main.company.screen')),\n    exact: false\n  },\n  {\n    path: SIGN_IN_PATH,\n    title: 'Sign In to UPC Portal',\n    screen: lazy(() => import('../../screens/signIn.screen')),\n  },\n  {\n    path: SIGN_UP_PATH,\n    title: 'Create new student account || UPC JMI',\n    screen: lazy(() => import('../../screens/student/signUp.student.screen')),\n  },\n  {\n    path: TERMS_AND_CONDITION_PATH,\n    title: 'Terms and Conditions || UPC JMI',\n    screen: lazy(() => import('../../screens/termsAndConditions.screen')),\n  },\n  {\n    path: PRIVACY_POLICY_PATH,\n    title: 'Privacy policy || UPC JMI',\n    screen: lazy(() => import('../../screens/privacyPolicy.screen'))\n  },\n  {\n    path: EMAIL_VERIFICATION_PATH,\n    title: 'Verify your email || UPC JMI',\n    screen: lazy(() => import('../../screens/emailVerification.screen'))\n  }\n];\n","import {IReducerAction} from 'types/common.type';\nimport {STUDENT_EXTRA_DATA_LOADED} from 'actions';\nimport {IStudentExtraDetails} from 'types/student.api.type';\n\nexport interface IStudentState {\n  extraDetails?: IStudentExtraDetails | null;\n}\n\nconst initialState: IStudentState = {\n};\n\nexport const student = (state: IStudentState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<IStudentState>): IStudentState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case STUDENT_EXTRA_DATA_LOADED:\n      return setState({extraDetails: action.data});\n\n    default:\n      return state;\n  }\n};\n","import {combineReducers} from 'redux';\nimport {auth, IAuthState} from './auth.reducer';\nimport {navigator, INavigatorState} from './navigator.reducer';\nimport {student, IStudentState} from './student.reducer';\n\nexport interface IReduxState {\n  auth: IAuthState;\n  navigator: INavigatorState;\n  student: IStudentState;\n}\n\nexport default combineReducers({\n  auth,\n  navigator,\n  student\n});\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Icon, Menu} from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport {\n  COMPANY_PORTAL_HOME_PATH,\n  CONTACT_PATH,\n  SIGN_UP_PATH,\n  STUDENT_PORTAL_HOME_PATH,\n} from 'constants/routes/main.paths.constant';\nimport {IReduxState} from 'reducers';\nimport {IUserMeta} from 'types/api.type';\nimport SignIn from './userAccountButton';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n  user: IUserMeta | undefined;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps  {\n  mode: 'vertical' | 'horizontal',\n}\n\nconst {Item} = Menu;\n\nconst HeaderPills: FC<IProps> = ({mode='horizontal', isAuthenticated, user}: IProps) => (\n  <div>\n    <div className='header-pill center-hv' style={{height: '100%'}}>\n      <SignIn />\n    </div>\n\n    <div className='header-pill'>\n      <Menu mode={mode} style={{border: 0}}>\n        <Item key='contact'>\n          <Link to={CONTACT_PATH}>\n            <Icon type='phone' />\n            Contact Us\n          </Link>\n        </Item>\n        {\n          isAuthenticated? (\n            <Item key='appstore'>\n              <Link\n                to={user && user.type === 'C'? COMPANY_PORTAL_HOME_PATH : STUDENT_PORTAL_HOME_PATH}\n              >\n                <Icon type='appstore' />\n                Placement Portal\n              </Link>\n            </Item>\n          ) : (\n            <Item key='sign-up'>\n              <Link to={SIGN_UP_PATH}>\n                <Icon type='user-add' />\n                Create New Account\n              </Link>\n            </Item>\n          )\n        }\n      </Menu>\n    </div>\n  </div>\n);\n\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({});\n\n// @ts-ignore\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HeaderPills);\n","import React from 'react';\nimport { Drawer, Icon, Typography } from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport {selectScreen} from 'helpers/screen.helper';\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\nimport HeaderPills from './headerPills';\n\ninterface IProps {\n}\n\ninterface IState {\n  visible: boolean\n}\n\nconst {Title} = Typography;\n\nclass MobileDrawer extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = { visible: false };\n  }\n\n  componentDidMount(): void {\n    window.addEventListener('hashchange', this.onClose)\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('hashchange', this.onClose)\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const toRender = selectScreen(true, true, false);\n    const {visible} = this.state;\n\n    if(!toRender)\n      return null;\n\n    return (\n      <div>\n        {/* eslint-disable-next-line max-len */}\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n        <div\n          className='drawer-handel'\n          onClick={this.showDrawer}\n        >\n          <Icon type='down-circle' />\n        </div>\n        <Drawer\n          placement='top'\n          closable={false}\n          onClose={this.onClose}\n          visible={visible}\n        >\n          <div className='center-hv'>\n            <Link to={HOME_PATH}>\n              <Title level={4}>\n                University Placement Cell\n              </Title>\n            </Link>\n          </div>\n\n          <HeaderPills mode='vertical' />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\n\nexport default MobileDrawer;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Row, Col} from 'antd';\n\nimport {\n  HOME_PATH,\n} from 'constants/routes/main.paths.constant';\nimport {selectScreen} from 'helpers/screen.helper';\nimport HeaderPills from './headerPills';\nimport MobileDrawer from './mobileDrawer';\n\nconst JamiaLogo = require('assets/svgs/jamia-logo.svg');\n\ninterface IProps {}\n\ninterface IState {\n  prevScrollPos: number;\n  visible: boolean;\n}\n\nclass AppHeader extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      prevScrollPos: window.pageYOffset,\n      visible: true,\n    };\n  }\n\n  componentDidMount(): void {\n    window.addEventListener('scroll', this.handelScroll);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handelScroll);\n  }\n\n  handelScroll = () => {\n    const {prevScrollPos} = this.state;\n\n    const currentScrollPos = window.pageYOffset;\n    const {body, documentElement: html} = document;\n\n    const pageHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight,\n    );\n\n    const visible =\n      prevScrollPos > currentScrollPos ||\n      currentScrollPos < 64 ||\n      pageHeight - window.innerHeight - currentScrollPos < 64;\n\n    this.setState({\n      prevScrollPos: currentScrollPos,\n      visible,\n    });\n  };\n\n  render() {\n    const {visible} = this.state;\n\n    return (\n      <>\n        <header className={`${!visible ? 'nav-up' : ''}`} style={{zIndex: 1}}>\n          <Row style={{flex: 1}}>\n            <Link to={HOME_PATH}>\n              <Col\n                xs={24}\n                md={6}\n                xxl={4}\n                className='logo-container'\n                style={{justifyContent: selectScreen('center', 'center', null)}}>\n                <img src={JamiaLogo} alt='University Placement Cell, Logo' />\n              &nbsp;&nbsp;&nbsp;\n                <div style={{color: '#000000', fontSize: '0.9rem'}}>\n                  <b>University Placement Cell</b>\n                  <br />\n                Jamia Millia Islamia\n                </div>\n              </Col>\n            </Link>\n\n            <Col xs={0} md={18} xxl={20}>\n              <HeaderPills mode='horizontal' />\n            </Col>\n          </Row>\n        </header>\n        <MobileDrawer />\n      </>\n    );\n  }\n}\n\nexport default AppHeader;\n","import React, {FC, useEffect, Suspense} from 'react';\nimport LoadingScreen from 'screens/loading.screen';\n\ninterface IProps {\n  title: string | undefined;\n  screen: any;\n}\n\nconst Screen: FC<IProps> = ({title, screen: ScreenComponent}: IProps) => {\n  useEffect(() => {\n    document.title = title || 'University Placement Cell, Jamia Millia Islamia';\n  }, [title]);\n\n  return (\n    <Suspense fallback={<LoadingScreen />}>\n      <ScreenComponent />\n    </Suspense>\n  );\n};\n\nexport default Screen;\n","import React, {FC} from 'react';\nimport {Typography, Row, Col, Icon} from 'antd';\nimport {\n  BUG_REPORT,\n  FEATURE_REQUEST,\n  JAMIA_MILLIA_ISLAMIA,\n  PRIVACY_POLICY,\n  REPO_LINK, TERMS_AND_CONDITION,\n  UNIVERSITY_PLACEMENT_CELL,\n} from 'constants/externalLinks.constant';\nimport XLink from './xLink';\n\nimport packageJson from '../../package.json';\n\ninterface IProps {\n}\n\nconst {Title} = Typography;\n\n\n// eslint-disable-next-line no-unused-vars\nconst Footer: FC<IProps> = (props: IProps) => (\n  <footer>\n    <Row>\n      <Col xs={24} md={12}>\n        <Title level={4}>\n            External links\n        </Title>\n        <XLink href={UNIVERSITY_PLACEMENT_CELL}>\n            Placement cell on Jamia&#39;s official site\n        </XLink>\n        <XLink href={JAMIA_MILLIA_ISLAMIA}>Jamia Millia Islamia</XLink>\n        <XLink href={PRIVACY_POLICY}>Privacy policy</XLink>\n        <XLink href={TERMS_AND_CONDITION}>Terms and Condition</XLink>\n      </Col>\n      <Col xs={24} md={12}>\n        <Title level={4}>\n          Application v\n          {packageJson.version}\n        </Title>\n        This is an open source application.\n        <XLink href={REPO_LINK}>\n          <Icon type='github' />\n          &nbsp; GitHub Repository\n        </XLink>\n        <XLink href={BUG_REPORT}>Report a Bug</XLink>\n        <XLink href={FEATURE_REQUEST}>Request feature</XLink>\n      </Col>\n    </Row>\n    <br />\n    <br />\n    <div className='center-hv'>\n      <Title level={4}>\n        &copy; 2019 University Placement Cell, Jamia Millia Islamia\n      </Title>\n    </div>\n  </footer>\n);\n\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport {Button, Drawer, Typography, message, Modal} from 'antd';\nimport {openNotificationWithIcon} from '../helpers/notification.helper';\nimport {selectScreen} from '../helpers/screen.helper';\n\ninterface IProps {}\n\ninterface IState {\n  installPrompt: any;\n  isA2HSVisible: boolean;\n  installing: boolean;\n}\n\nconst {Title, Text} = Typography;\n\nclass A2hsPrompt extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      installPrompt: null,\n      isA2HSVisible: false,\n      installing: false,\n    };\n  }\n\n  componentDidMount = (): void => {\n    window.addEventListener('beforeinstallprompt', this.beforeInstall);\n    window.addEventListener('appinstalled', this.onInstall);\n  };\n\n  componentWillUnmount = (): void => {\n    window.removeEventListener('beforeinstallprompt', this.beforeInstall);\n    window.removeEventListener('appinstalled', this.onInstall);\n  };\n\n  beforeInstall = (e: any): void => {\n    e.preventDefault();\n    const deferredPrompt = e;\n\n    this.setState({\n      installPrompt: deferredPrompt,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isA2HSVisible: true,\n      });\n    }, 1000 * 20);\n  };\n\n  handelNotNow = () => {\n    this.setState({\n      isA2HSVisible: false,\n    });\n    openNotificationWithIcon(\n      'info',\n      'We will miss you...',\n      'In case you change your mind, go to Options > Add to Home Screen',\n    );\n  };\n\n  handelPWAInstallPrompt = (): void => {\n    const {installPrompt} = this.state;\n\n    if (installPrompt) {\n      installPrompt.prompt().then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          this.setState({\n            installing: true,\n          });\n        } else {\n          this.handelNotNow();\n        }\n      });\n    }\n  };\n\n  onInstall = (): void => {\n    message.success('Install successful');\n    this.setState({\n      installing: false,\n      isA2HSVisible: false,\n    });\n  };\n\n  toggle = (): void => {\n    const {isA2HSVisible} = this.state;\n\n    this.setState({\n      isA2HSVisible: !isA2HSVisible,\n    });\n  };\n\n  render() {\n    const {isA2HSVisible, installing} = this.state;\n    const AttentionSeeker = selectScreen(Drawer, Drawer, Modal);\n\n    return (\n      <AttentionSeeker\n        visible={isA2HSVisible}\n        placement='bottom'\n        centered\n        footer={null}\n        closable={false}>\n        <Title level={3}>Access all our job/internships offline</Title>\n        <Text>Install our web app, it wont take any space on your device.</Text>\n        <br />\n        <br />\n        <div style={{textAlign: 'center'}}>\n          <Button size='small' type='link' onClick={this.handelNotNow}>\n            Not Now\n          </Button>\n          <br />\n          <Button\n            loading={installing}\n            style={{width: '100%'}}\n            size='large'\n            type='primary'\n            onClick={this.handelPWAInstallPrompt}>\n            {installing ? 'Installing...' : 'Install'}\n          </Button>\n        </div>\n      </AttentionSeeker>\n    );\n  }\n}\n\nexport default A2hsPrompt;\n","import React, {Suspense, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {IRoute} from 'types/common.type';\n\nimport LoadingScreen from 'screens/loading.screen';\nimport NotFoundScreen from 'screens/404.screen';\nimport AppHeader from 'components/appHeader';\nimport {checkUserAction} from 'actions/auth.action';\nimport Screen from 'components/screen';\nimport Footer from 'components/footer';\nimport A2hsPrompt from './components/a2hsPrompt';\n\ninterface IStateProps {\n  routes: Array<IRoute>;\n  connected: null | boolean;\n}\n\ninterface IDispatchProps {\n  checkUser(): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst Main = ({routes, checkUser}: IProps) => {\n  useEffect(() => {\n    checkUser();\n  }, [checkUser]);\n\n  return (\n    <Suspense fallback={<LoadingScreen />}>\n      <AppHeader />\n      <A2hsPrompt />\n      <main>\n        <Switch>\n          {routes.map((route, index) => (\n            <Route\n              exact={route.exact === undefined ? true : route.exact}\n              path={route.path}\n              component={() => <Screen title={route.title} screen={route.screen} />}\n              key={index.toString()}\n            />\n          ))}\n          <Route component={NotFoundScreen} />\n        </Switch>\n      </main>\n      <Footer />\n    </Suspense>\n  );\n};\n\nconst mapStateToProps = (state: any): IStateProps => ({\n  routes: state.navigator.routes,\n  connected: state.navigator.connected,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  checkUser: () => dispatch(checkUserAction()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Main);\n","/**\n * @format\n * @flow\n */\n\nimport React, {Component} from 'react';\nimport {applyMiddleware, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {HashRouter as Router} from 'react-router-dom';\n\nimport rootReducer from 'reducers';\nimport Main from 'main';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\ninterface IProps {}\n\ninterface IState {\n  width: number;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      // eslint-disable-next-line react/no-unused-state\n      width: window.innerWidth,\n    };\n  }\n\n  componentDidMount = (): void => {\n    window.addEventListener('resize', this.updateDimensions);\n    window.addEventListener('hashchange', this.scrollTop);\n  };\n\n  componentWillUnmount = (): void => {\n    window.removeEventListener('resize', this.updateDimensions);\n    window.removeEventListener('hashchange', this.scrollTop);\n  };\n\n  updateDimensions = (): void => {\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({width: window.innerWidth});\n  };\n\n  scrollTop = (): void => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Main />\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n University Placement Cell online Job/Internship portal (upcjmi-react-app).\n Copyright (C) 2019  University Placement Cell, Jamia Millia Islamia\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2 of the License, or\n (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to University Placement Cell\n 3rd Floor, Faculty of Engineering & Technology Building\n Jamia Millia Islamia, New Delhi - 110025\n\n University Placement Cell, hereby disclaims all copyright interest in the program\n `upcjmi-react-app' is written by Faisal Manzer.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\n\nimport 'styles/styles.scss';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import axios from 'axios';\n// @ts-ignore\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport {API_TOKENS} from 'constants/localStorage.constant';\nimport {IAccessToken} from 'types/api.type';\nimport {IObject} from 'types/common.type';\nimport {BASE_URL} from 'constants/credentials.constant';\nimport {\n  signInAgainNotification,\n  errorGettingUserInfoNotification\n} from 'helpers/notification.helper';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers.get['Content-Type'] = 'application/x-www-urlencoded';\n\nconst REFRESH_ACCESS_TOKEN = 'auth/token/refresh/';\n\nexport const loadOpenUrl = async (url: string, config: IObject = {}): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    axios(url, config)\n      .then(res => resolve(res.data))\n      .catch(err => reject(err.response));\n  });\n};\n\nconst getAccessToken = () => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    const data = reactLocalStorage.getObject(API_TOKENS);\n\n    if (!data) return reject('No User found');\n\n    let accessToken = '';\n    let expires = new Date(data.expires * 1000);\n    const currentTime = new Date();\n\n    if (expires > currentTime) {\n      accessToken = data.tokens.access;\n    } else {\n      try {\n        const newToken: IAccessToken = await loadOpenUrl(REFRESH_ACCESS_TOKEN, {\n          method: 'post',\n          data: {\n            refresh: data.tokens.refresh,\n          },\n        });\n        accessToken = newToken.access;\n        expires = new Date(newToken.expires * 1000);\n\n        reactLocalStorage.setObject(API_TOKENS, {\n          tokens: {\n            ...data.tokens,\n            access: accessToken,\n          },\n          expires,\n        });\n      } catch (e) {\n        try {\n          if (e.data.code === 'token_not_valid') signInAgainNotification();\n          else errorGettingUserInfoNotification();\n        } catch (er) {\n          // pass\n        }\n\n        return reject('Error refreshing token');\n      }\n    }\n\n    return resolve(accessToken);\n  });\n};\n\nexport const loadSecureUrl = (url: string, config: IObject = {}): Promise<any> => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    try {\n      const data = await loadOpenUrl(url, {\n        ...config,\n        headers: {\n          Authorization: `Bearer ${await getAccessToken()}`,\n        },\n      });\n      return resolve(data);\n    } catch (e) {\n      return reject(e);\n    }\n  });\n};\n","export const API_TOKENS = 'APITokens';\nexport const SIGNED_IN_TYPE = 'SignedType';\n","export const BUG_REPORT =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app/issues/new?' +\n  'assignees=alhaqhassan&labels=bug&template=bug_report.md&title=';\n\nexport const FEATURE_REQUEST =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app/issues/new?' +\n  'assignees=Faisal-Manzer&labels=enhancement&template=feature_request.md&title=';\nexport const REPO_LINK =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app';\n\nexport const FAISAL_MANZER_GITHUB = 'https://github.com/Faisal-Manzer';\nexport const HASSAN_GITHUB = 'https://github.com/allhassan';\nexport const LICENCE = 'https://github.com/Faisal-Manzer/upcjmi-react-app/blob/master/LICENCE';\nexport const UNIVERSITY_PLACEMENT_CELL =\n  'https://www.jmi.ac.in/studyatjamia/cell/upc/introduction';\nexport const JAMIA_MILLIA_ISLAMIA =\n  'https://jmi.ac.in';\nexport const TERMS_AND_CONDITION =\n  '/#/terms-and-conditions/';\nexport const PRIVACY_POLICY =\n  '/#/privacy-policy/';\n","import React, {FC} from 'react';\n\ninterface IProps {\n  href: string,\n  children: any,\n  newLine?: boolean;\n}\n\nconst XLink: FC<IProps> = ({href, children, newLine=true}: IProps) => (\n  <span>\n    <a href={href} target='_blank' rel='noopener noreferrer'>\n      {children}\n    </a>\n    {newLine? <br /> : null}\n  </span>\n);\n\nexport default XLink;\n","export const deviceType = (width: number): string => {\n  if (width < 576) return 'xs';\n  if (width < 768) return 'sm';\n  if (width < 992) return 'md';\n  if (width < 1200) return 'xl';\n\n  return 'xxl';\n};\n\nexport const selectScreen = (\n  xs: any = undefined,\n  sm: any = undefined,\n  md: any = undefined,\n  lg: any = undefined,\n  xl: any = undefined,\n  xxl: any = undefined,\n): any => {\n  const device = deviceType(window.innerWidth);\n\n  // eslint-disable-next-line no-param-reassign\n  if (sm === undefined) sm = xs;\n  // eslint-disable-next-line no-param-reassign\n  if (md === undefined) md = sm;\n  // eslint-disable-next-line no-param-reassign\n  if (lg === undefined) lg = md;\n  // eslint-disable-next-line no-param-reassign\n  if (xl === undefined) xl = lg;\n  // eslint-disable-next-line no-param-reassign\n  if (xxl === undefined) xxl = xl;\n\n  switch (device) {\n    case 'xs':\n      return xs;\n    case 'sm':\n      return sm;\n    case 'md':\n      return md;\n    case 'lg':\n      return lg;\n    case 'xl':\n      return xl;\n    case 'xxl':\n      return xxl;\n    default:\n      // logically there should be an error but will generate error if index is not mounted\n      return 0;\n  }\n};\n","import {Dispatch} from 'redux';\n// @ts-ignore\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport {IGetStateFunction, ISignInOptions} from 'types/common.type';\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\nimport {\n  cannotConnectToServerNotification,\n  openNotificationWithIcon,\n  signingInErrorNotification,\n  signInSuccessNotification,\n  signOutSuccessNotification,\n} from 'helpers/notification.helper';\nimport {\n  getUserMetaDetailAPI,\n  pingAPI,\n  signInWithEmailAPI,\n  signInWithGoogleAPI,\n} from 'helpers/api/api.helper';\nimport {API_TOKENS, SIGNED_IN_TYPE} from 'constants/localStorage.constant';\n\nimport {IAccessToken, ISignInToken, IUserMeta} from 'types/api.type';\nimport {\n  CONNECTED_WITH_SERVER, COULD_NOT_CONNECT_TO_SERVER,\n  SIGN_IN_INITIATED,\n  SIGN_IN_SUCCESS,\n  SIGN_OUT,\n  SIGNING_IN_FAILED,\n} from './index';\n\n// eslint-disable-next-line no-unused-vars\nconst fakeRedirect = (path: string): void => {};\n\nconst saveToken = (token: IAccessToken): void => {\n  reactLocalStorage.setObject(API_TOKENS, {\n    tokens: token,\n    expires: token.expires,\n  });\n};\n\nconst saveSignIn = (user: IUserMeta, signedWith: ISignInOptions = 'U', silent: boolean=false) =>\n  // eslint-disable-next-line no-unused-vars\n  async (dispatch: Dispatch, getState: IGetStateFunction) => {\n    dispatch({type: SIGN_IN_SUCCESS, user, signedWith});\n    reactLocalStorage.set(SIGNED_IN_TYPE, signedWith);\n    if(!silent)\n      signInSuccessNotification(user.name);\n  };\n\nconst makeUserSignIn = (apiCall: any, signedWith: ISignInOptions = 'U') => async (\n  dispatch: Dispatch,\n  getState: IGetStateFunction,\n) => {\n  try {\n    dispatch({type: SIGN_IN_INITIATED});\n    const {user, token}: ISignInToken = await apiCall();\n    saveToken(token);\n    dispatch({type: SIGN_IN_SUCCESS, user, signedWith});\n    saveSignIn(user, signedWith)(dispatch, getState);\n  } catch (e) {\n    dispatch({type: SIGNING_IN_FAILED});\n    if(e && e.data !== undefined)\n      signingInErrorNotification(e.data.detail);\n    else\n      signingInErrorNotification(undefined);\n  }\n};\n\nexport const signInWithEmailAction = (email: string, password: string) => async (\n  dispatch: Dispatch,\n  getState: IGetStateFunction,\n) => {\n  const apiCall = () => signInWithEmailAPI(email, password);\n  makeUserSignIn(apiCall, 'E')(dispatch, getState);\n};\n\nexport const signInWithGoogleAction = (id: string, googleToken: string) => async (\n  dispatch: Dispatch,\n  getState: IGetStateFunction,\n) => {\n  const apiCall = () => signInWithGoogleAPI(id, googleToken);\n  makeUserSignIn(apiCall, 'G')(dispatch, getState);\n};\n\nexport const signIn = (account: any) => (dispatch: Dispatch, getState: IGetStateFunction) => {\n  switch (account.type) {\n    case 'E':\n      signInWithEmailAction(account.email, account.password)(dispatch, getState);\n      break;\n    case 'G':\n      signInWithGoogleAction(account.id, account.token)(dispatch, getState);\n      break;\n    default:\n      openNotificationWithIcon('error', 'Unknown signing');\n  }\n};\n\n// eslint-disable-next-line no-unused-vars\nconst ping = () => async (dispatch: Dispatch, getState: IGetStateFunction) => {\n  try {\n    await pingAPI();\n    dispatch({type: CONNECTED_WITH_SERVER});\n  } catch (e) {\n    cannotConnectToServerNotification();\n    dispatch({type: COULD_NOT_CONNECT_TO_SERVER});\n  }\n};\n\n\nexport const checkUserAction = () => async (dispatch: Dispatch, getState: IGetStateFunction) => {\n  if (reactLocalStorage.get(API_TOKENS)) {\n    try {\n      const user = await getUserMetaDetailAPI();\n      saveSignIn(user, reactLocalStorage.get(SIGNED_IN_TYPE), true)(dispatch, getState);\n      dispatch({type: CONNECTED_WITH_SERVER});\n    } catch (e) {\n      localStorage.clear();\n      ping()(dispatch, getState);\n    }\n  } else {\n    ping()(dispatch, getState)\n  }\n};\n\nexport const signOutAction = (redirect: any = fakeRedirect) => (dispatch: Dispatch) => {\n  reactLocalStorage.remove(API_TOKENS);\n  dispatch({type: SIGN_OUT});\n  signOutSuccessNotification();\n  redirect(HOME_PATH);\n};\n","import {IEmail, IPing, ISignInToken, IUserExists, IUserMeta} from 'types/api.type';\nimport {ISignUpData} from 'types/signUp.type';\nimport {IContactForm} from 'types/apiData.types';\nimport {loadOpenUrl, loadSecureUrl} from './loader.api.helper';\n\nconst UPing = 'ping/';\n\nconst USignInWithEmail = 'auth/sign-in/email/';\nconst USignInWithGoogle = 'auth/sign-in/google/';\n\nconst USignUpStudent = 'student/sign-up/';\n// const USignUpCompanyRepresentative = 'company/sign-up/';\n\nconst UContact = 'contact/';\n\nconst UUserMetaDetails = 'auth/user/meta/';\nconst UUserExits = 'auth/user/exists/';\n\nconst UVerifyEmail = 'auth/verify/email/';\nconst USendVerificationMail = 'auth/verify/email/send/';\n\nexport const pingAPI = (): Promise<IPing> => loadOpenUrl(UPing);\n\nexport const signUpStudentAPI = (data: ISignUpData) =>\n  loadOpenUrl(USignUpStudent, {\n    method: 'post',\n    data,\n  });\n\nexport const signInWithEmailAPI = (email: string, password: string): Promise<ISignInToken> =>\n  loadOpenUrl(USignInWithEmail, {\n    method: 'post',\n    data: {email, password},\n  });\nexport const signInWithGoogleAPI = (id: string, token: string): Promise<ISignInToken> =>\n  loadOpenUrl(USignInWithGoogle, {\n    method: 'post',\n    data: {id, token},\n  });\n\nexport const contactFormAPI = (data: IContactForm): Promise<any> => loadOpenUrl(UContact, {\n  method: 'post',\n  data\n});\n\nexport const getUserMetaDetailAPI = (): Promise<IUserMeta> => loadSecureUrl(UUserMetaDetails);\nexport const doesUserExistsAPI = (email: string): Promise<IUserExists> =>\n  loadOpenUrl(UUserExits, {\n    params: {\n      email,\n    },\n  });\n\nexport const verifyEmailAPI = (hash: string): Promise<IEmail> => loadOpenUrl(UVerifyEmail, {\n  method: 'post',\n  data: {hash}\n});\n\nexport const resendVerificationMailAPI = (): Promise<void> =>\n  loadSecureUrl(USendVerificationMail);\n","export const GOOGLE_OAUTH_CLIENT_ID = process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID;\nexport const GOOGLE_RECAPTCHA_KEY = process.env.REACT_APP_GOOGLE_RECAPTCHA_CLIENT_KEY;\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\n","import React, {FC} from 'react';\nimport {Spin} from 'antd';\n\ninterface IProps {}\n\nconst LoadingScreen: FC<IProps> = () => (\n  <div className='loading-screen'>\n    <Spin size='large' tip='Loading...' />\n  </div>\n);\n\nexport default LoadingScreen;\n"],"sourceRoot":""}