{"version":3,"sources":["screens/loading.screen.tsx","constants/routes/main.paths.constant.ts","actions/index.ts","screens/404.screen.tsx","components/auth/google.signOut.tsx","components/auth/default.signOut.tsx","components/signOutButton.tsx","components/userAccountButton.tsx","assets/svgs/jamia-logo.svg","helpers/notification.helper.ts","reducers/auth.reducer.ts","reducers/navigator.reducer.ts","constants/routes/main.routes.constant.ts","reducers/student.reducer.ts","reducers/index.ts","components/headerPills.tsx","components/headerPillsMobile.tsx","components/appHeader.tsx","components/screen.tsx","components/footer.tsx","components/a2hsPrompt.tsx","screens/500.screen.tsx","components/errorBoundry.jsx","main.tsx","App.tsx","serviceWorker.js","index.js","helpers/api/main.api.helper.ts","constants/localStorage.constant.ts","constants/externalLinks.constant.ts","components/xLink.tsx","actions/auth.action.ts","helpers/screen.helper.ts","helpers/api/api.helper.ts","constants/credentials.constant.ts"],"names":["LoadingScreen","className","size","tip","HOME_PATH","CONTACT_PATH","SIGN_IN_PATH","SIGN_UP_PATH","PRIVACY_POLICY_PATH","TERMS_AND_CONDITION_PATH","PORTAL_HOME_PATH","STUDENT_PORTAL_HOME_PATH","COMPANY_PORTAL_HOME_PATH","EMAIL_VERIFICATION_PATH","SIGN_IN_INITIATED","SIGN_IN_SUCCESS","SIGN_OUT","SIGNING_IN_FAILED","CONNECTED_WITH_SERVER","COULD_NOT_CONNECT_TO_SERVER","STUDENT_EXTRA_DATA_LOADED","NotFoundScreen","status","title","subTitle","extra","to","type","withRouter","connect","state","isAuthenticated","auth","dispatch","signOut","redirect","signOutAction","props","history","clientId","GOOGLE_OAUTH_CLIENT_ID","onLogoutSuccess","render","renderProps","onClick","redirectFunction","push","icon","signedWith","module","exports","openNotificationWithIcon","message","desc","description","top","htmlNotification","reactHtmlParser","replace","signInAgainNotification","errorGettingUserInfoNotification","signInSuccessNotification","name","signOutSuccessNotification","signingInErrorNotification","cannotConnectToServerNotification","error","duration","placement","userExistsWithThisEmail","email","signUpSuccessfullNotification","signUpFailedNotification","detail","initialState","inProgress","routes","path","screen","lazy","exact","connected","combineReducers","action","setState","override","user","navigator","student","extraDetails","data","Item","mode","selectedKeys","key","Title","HeaderPillsMobile","showDrawer","visible","onClose","this","window","addEventListener","listen","removeEventListener","toRender","selectScreen","closable","level","React","Component","JamiaLogo","require","AppHeader","handelScroll","prevScrollPos","currentScrollPos","pageYOffset","document","body","html","documentElement","pageHeight","Math","max","scrollHeight","offsetHeight","clientHeight","innerHeight","style","flex","xs","md","xxl","justifyContent","src","alt","Screen","ScreenComponent","useEffect","fallback","Footer","href","UNIVERSITY_PLACEMENT_CELL","JAMIA_MILLIA_ISLAMIA","PRIVACY_POLICY","TERMS_AND_CONDITION","packageJson","version","REPO_LINK","BUG_REPORT","FEATURE_REQUEST","Text","A2hsPrompt","componentDidMount","beforeInstall","onInstall","componentWillUnmount","e","preventDefault","deferredPrompt","installPrompt","setTimeout","isA2HSVisible","handelNotNow","handelPWAInstallPrompt","prompt","then","choiceResult","outcome","installing","success","toggle","AttentionSeeker","centered","footer","loading","InternalErrorScreen","ErrorBoundary","hasError","errorInfo","children","checkUser","checkUserAction","scrollTo","map","route","index","undefined","component","toString","store","createStore","rootReducer","applyMiddleware","thunk","App","updateDimensions","width","innerWidth","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","getElementById","URL","process","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","axios","defaults","baseURL","API_BASE_URL","loadOpenUrl","url","a","Promise","resolve","reject","res","err","getAccessToken","reactLocalStorage","getObject","API_TOKENS","accessToken","expires","Date","currentTime","tokens","access","method","refresh","newToken","setObject","code","er","loadSecureUrl","Authorization","SIGNED_IN_TYPE","XLink","newLine","target","rel","fakeRedirect","saveToken","token","saveSignIn","silent","set","makeUserSignIn","apiCall","signInWithEmailAction","password","signInWithEmailAPI","signInWithGoogleAction","id","googleToken","signInWithGoogleAPI","signIn","account","ping","pingAPI","getUserMetaDetailAPI","localStorage","clear","remove","deviceType","sm","lg","xl","device","signUpStudentAPI","contactFormAPI","doesUserExistsAPI","params","verifyEmailAPI","hash","resendVerificationMailAPI","GOOGLE_RECAPTCHA_KEY"],"mappings":"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","file":"static/js/main.f94c595f.chunk.js","sourcesContent":["import React, {FC} from 'react';\nimport {Spin} from 'antd';\n\ninterface IProps {}\n\nconst LoadingScreen: FC<IProps> = () => (\n  <div className='loading-screen'>\n    <Spin size='large' tip='Loading...' />\n  </div>\n);\n\nexport default LoadingScreen;\n","export const HOME_PATH = '/';\nexport const CONTACT_PATH = '/contact/';\nexport const SIGN_IN_PATH = '/sign-in/';\nexport const SIGN_UP_PATH = '/sign-up/';\n\nexport const PRIVACY_POLICY_PATH = '/privacy-policy/';\nexport const TERMS_AND_CONDITION_PATH = '/terms-and-conditions/';\n\nexport const PORTAL_HOME_PATH = '/portal/';\nexport const STUDENT_PORTAL_HOME_PATH = '/portal/student/';\nexport const COMPANY_PORTAL_HOME_PATH = '/portal/company/';\n\nexport const EMAIL_VERIFICATION_PATH = '/verification/email/:hash';\n","// Auth\nexport const SIGN_IN_INITIATED = 'SIGN_IN_INITIATED';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGNING_IN_FAILED = 'SIGNING_IN_FAILED';\n\n// Navigator\nexport const CONNECTED_WITH_SERVER = 'CONNECTED_WITH_SERVER';\nexport const COULD_NOT_CONNECT_TO_SERVER = 'COULD_NOT_CONNECT_TO_SERVER';\n\n// Student\nexport const STUDENT_EXTRA_DATA_LOADED = 'STUDENT_EXTRA_DATA_LOADED';\n","import React, {FC} from 'react';\nimport {Result, Button} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\n\ninterface IProps {}\n\nconst NotFoundScreen: FC<IProps> = () => (\n  <div className='full-page center-hv'>\n    <Result\n      status='404'\n      title='404'\n      subTitle='Sorry, the page you visited does not exist.'\n      extra={(\n        <Link to={HOME_PATH}>\n          <Button type='primary'>Back Home</Button>\n        </Link>\n)}\n    />\n  </div>\n);\n\nexport default NotFoundScreen;\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {GoogleLogout} from 'react-google-login';\nimport {withRouter} from 'react-router-dom';\n\nimport {GOOGLE_OAUTH_CLIENT_ID} from 'constants/credentials.constant';\nimport {IReduxState} from 'reducers';\nimport {signOutAction} from 'actions/auth.action';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {\n  signOut(redirect: any): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  history: any;\n  redirect: boolean;\n}\n\nconst GoogleSignOut: FC<IProps> = (props: IProps) => {\n  const {history, redirect} = props;\n\n  return (\n    <GoogleLogout\n      clientId={GOOGLE_OAUTH_CLIENT_ID || ''}\n      onLogoutSuccess={() => {}}\n      render={renderProps => (\n        <Button\n          onClick={() => {\n            const redirectFunction = redirect ? history.push : () => {};\n            props.signOut(redirectFunction);\n            renderProps.onClick();\n          }}\n          icon='logout'\n          type='link'>\n          Sign Out\n        </Button>\n      )}\n    />\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signOut: redirect => dispatch(signOutAction(redirect)),\n});\n\nexport default withRouter(\n  // @ts-ignore\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(GoogleSignOut),\n);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {withRouter} from 'react-router-dom';\n\nimport {signOutAction} from 'actions/auth.action';\n\ninterface IStateProps {}\n\ninterface IDispatchProps {\n  signOut(redirect: any): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  history: {\n    push: any;\n  };\n  redirect: boolean;\n}\n\nconst DefaultSignOut: FC<IProps> = ({signOut, history, redirect = true}: IProps) => (\n  <Button\n    onClick={() => {\n      const redirectFunction = redirect ? history.push : () => {};\n      signOut(redirectFunction);\n    }}\n    icon='logout'\n    type='link'>\n    Sign Out\n  </Button>\n);\n\nconst mapStateToProps = (): IStateProps => ({});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signOut: redirect => dispatch(signOutAction(redirect)),\n});\n\nexport default withRouter(\n  // @ts-ignore\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(DefaultSignOut),\n);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\n\nimport {ISignInOptions} from 'types/common.type';\nimport {IReduxState} from 'reducers';\nimport GoogleSignOut from './auth/google.signOut';\nimport DefaultSignOut from './auth/default.signOut';\n\ninterface IStateProps {\n  signedWith: ISignInOptions;\n}\n\ninterface IProps extends IStateProps {\n  redirect?: boolean;\n}\n\nconst SignOutButton: FC<IProps> = (props: IProps) => {\n  const {signedWith = false, redirect = true} = props;\n\n  switch (signedWith) {\n    case 'G':\n      return <GoogleSignOut redirect={redirect} />;\n    case 'E':\n    case 'U':\n    default:\n      return <DefaultSignOut redirect={redirect} />;\n  }\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  signedWith: state.auth.signedWith,\n});\n\nexport default connect(mapStateToProps)(SignOutButton);\n","import React, {FC} from 'react';\nimport {Button} from 'antd';\nimport {connect} from 'react-redux';\n\nimport {Link} from 'react-router-dom';\nimport {IReduxState} from 'reducers';\nimport {SIGN_IN_PATH} from 'constants/routes/main.paths.constant';\nimport SignOutButton from './signOutButton';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IProps extends IStateProps {}\n\nconst UserAccountButton: FC<IProps> = (props: IProps) => {\n  const {isAuthenticated} = props;\n\n  if (isAuthenticated) return <SignOutButton />;\n\n  return (\n    <Link to={SIGN_IN_PATH}>\n      <Button type='primary' size='large' icon='login'>\n        Sign In\n      </Button>\n    </Link>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(UserAccountButton);\n","module.exports = __webpack_public_path__ + \"static/media/jamia-logo.1b80d421.svg\";","import {notification} from 'antd';\nimport reactHtmlParser from 'react-html-parser';\n\nexport const openNotificationWithIcon = (\n  type: 'warning' | 'success' | 'error' | 'info',\n  message: string,\n  desc: string = '',\n): void => {\n  // @ts-ignore\n  notification[type]({\n    message,\n    description: desc,\n    top: 70,\n  });\n};\nexport const htmlNotification = (\n  type: 'warning' | 'success' | 'error',\n  message: string,\n  desc: string = '',\n): void => {\n  openNotificationWithIcon(\n    type,\n    message,\n    // @ts-ignore\n    reactHtmlParser(desc.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')),\n  );\n};\n\nexport const signInAgainNotification = () =>\n  openNotificationWithIcon(\n    'warning',\n    'Please, SignIn Again',\n    'We SignOut user after 24hr of login',\n  );\nexport const errorGettingUserInfoNotification = () =>\n  openNotificationWithIcon(\n    'error',\n    'Please, SignIn Again',\n    'We are having error in getting your info',\n  );\nexport const signInSuccessNotification = (name: string) =>\n  openNotificationWithIcon('success', `Welcome ${name}`, 'You successfully signed in.');\n\nexport const signOutSuccessNotification = () =>\n  openNotificationWithIcon(\n    'success',\n    'Thank you for giving your time.',\n    'You successfully signed out.',\n  );\n\nexport const signingInErrorNotification = (\n  message: string = 'An unknown error occurred during sign in',\n) => openNotificationWithIcon('error', message, 'Create a new account.');\n\nexport const signUpWithGoogleFailed = () =>\n  openNotificationWithIcon('error', 'Sign Up with Google failed', 'Please try again.');\n\nexport const cannotConnectToServerNotification = () =>\n  notification.error({\n    message: 'Error connecting to server',\n    description:\n      'Try refreshing page. After refresh if problem persist clear data and cookies. ' +\n      'If problem doesnt resolve mail to faisal@upcjmi.com',\n    duration: 1000,\n    placement: 'bottomRight',\n  });\n\nexport const userExistsWithThisEmail = (email: string) =>\n  openNotificationWithIcon(\n    'error',\n    `Email ${email} is associated with another account.`,\n    'Try signing in or try forgetting password.',\n  );\n\nexport const signUpSuccessfullNotification = () =>\n  openNotificationWithIcon('success', 'Account created you successfully');\n\nexport const signUpFailedNotification = (detail: string) =>\n  htmlNotification('error', 'Failed to create account', detail);\n\nexport const apiErrorNotification = (\n  type: 'warning' | 'success' | 'error',\n  message: string,\n  error: any,\n): void => {\n  if (error.data !== undefined) {\n    const errorData = error.data.detail;\n    if (typeof errorData === 'string') openNotificationWithIcon(type, message, errorData);\n    else {\n      const errorDetail = Object.keys(errorData).map((errorO: any) => {\n        return errorO.map((errorOO: any) => {\n          return `${errorOO}\\n`;\n        });\n      });\n\n      htmlNotification(type, message, `The following error occurred\\n${errorDetail}`);\n    }\n  } else {\n    openNotificationWithIcon(type, message, 'An unknown error occurred');\n  }\n};\n","import {IReducerAction, ISignInOptions} from 'types/common.type';\nimport {SIGN_IN_INITIATED, SIGN_IN_SUCCESS, SIGN_OUT, SIGNING_IN_FAILED} from 'actions';\nimport {IUserMeta} from 'types/api.type';\n\nexport interface IAuthState {\n  isAuthenticated: boolean;\n  inProgress: boolean;\n  user?: IUserMeta;\n  signedWith: ISignInOptions;\n}\n\nconst initialState: IAuthState = {\n  isAuthenticated: false,\n  inProgress: false,\n  signedWith: 'U',\n};\n\nexport const auth = (state: IAuthState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<IAuthState>): IAuthState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case SIGN_IN_SUCCESS:\n      return setState({\n        isAuthenticated: true,\n        user: action.user,\n        signedWith: action.signedWith,\n        inProgress: false,\n      });\n\n    case SIGN_IN_INITIATED:\n      return {\n        ...initialState,\n        inProgress: true,\n      };\n\n    case SIGN_OUT:\n      return initialState;\n\n    case SIGNING_IN_FAILED:\n      return setState({inProgress: false});\n\n    default:\n      return state;\n  }\n};\n","import {IReducerAction, IRoute} from 'types/common.type';\nimport {COMMON_ROUTES} from 'constants/routes/main.routes.constant';\nimport {CONNECTED_WITH_SERVER, COULD_NOT_CONNECT_TO_SERVER} from 'actions';\n\nexport interface INavigatorState {\n  routes: Array<IRoute>;\n  connected: boolean | null;\n}\n\nconst initialState: INavigatorState = {\n  routes: COMMON_ROUTES,\n  connected: null,\n};\n\nexport const navigator = (state: INavigatorState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<INavigatorState>): INavigatorState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case CONNECTED_WITH_SERVER:\n      return setState({connected: true});\n    case COULD_NOT_CONNECT_TO_SERVER:\n      return setState({connected: false});\n\n    default:\n      return state;\n  }\n};\n","import {lazy} from 'react';\nimport {IRoute} from 'types/common.type';\nimport {\n  COMPANY_PORTAL_HOME_PATH,\n  CONTACT_PATH,\n  EMAIL_VERIFICATION_PATH,\n  HOME_PATH,\n  PORTAL_HOME_PATH,\n  PRIVACY_POLICY_PATH,\n  SIGN_IN_PATH,\n  SIGN_UP_PATH,\n  STUDENT_PORTAL_HOME_PATH,\n  TERMS_AND_CONDITION_PATH,\n} from './main.paths.constant';\n\nexport const COMMON_ROUTES: Array<IRoute> = [\n  {\n    path: HOME_PATH,\n    title: 'Welcome',\n    screen: lazy(() => import('screens/home.screen')),\n  },\n  {\n    path: CONTACT_PATH,\n    title: 'Contact Us',\n    screen: lazy(() => import('screens/contact.screen')),\n  },\n  {\n    path: PORTAL_HOME_PATH,\n    title: 'Placement and Internship Portal Home',\n    screen: lazy(() => import('screens/portal.screen')),\n    exact: true,\n  },\n  {\n    path: STUDENT_PORTAL_HOME_PATH,\n    title: 'Student Portal',\n    screen: lazy(() => import('screens/student/main.student.screen')),\n    exact: false,\n  },\n  {\n    path: COMPANY_PORTAL_HOME_PATH,\n    title: 'Company Portal || University Placement Cell, Jamia Millia Islamia',\n    screen: lazy(() => import('screens/company/main.company.screen')),\n    exact: false,\n  },\n  {\n    path: SIGN_IN_PATH,\n    title: 'Sign In to UPC JMI Portal',\n    screen: lazy(() => import('screens/signIn.screen')),\n  },\n  {\n    path: SIGN_UP_PATH,\n    title: 'Create new student account',\n    screen: lazy(() => import('screens/student/signUp.student.screen')),\n  },\n  {\n    path: TERMS_AND_CONDITION_PATH,\n    title: 'Terms and Conditions',\n    screen: lazy(() => import('screens/termsAndConditions.screen')),\n  },\n  {\n    path: PRIVACY_POLICY_PATH,\n    title: 'Privacy policy',\n    screen: lazy(() => import('screens/privacyPolicy.screen')),\n  },\n  {\n    path: EMAIL_VERIFICATION_PATH,\n    title: 'Verify your email',\n    screen: lazy(() => import('screens/emailVerification.screen')),\n  },\n];\n","import {IReducerAction} from 'types/common.type';\nimport {STUDENT_EXTRA_DATA_LOADED} from 'actions';\nimport {IStudentExtraDetails} from 'types/student.api.type';\n\nexport interface IStudentState {\n  extraDetails?: IStudentExtraDetails | null;\n}\n\nconst initialState: IStudentState = {\n};\n\nexport const student = (state: IStudentState = initialState, action: IReducerAction) => {\n  // eslint-disable-next-line no-undef\n  const setState = (override: Partial<IStudentState>): IStudentState => ({\n    ...state,\n    ...override,\n  });\n\n  switch (action.type) {\n    case STUDENT_EXTRA_DATA_LOADED:\n      return setState({extraDetails: action.data});\n\n    default:\n      return state;\n  }\n};\n","import {combineReducers} from 'redux';\nimport {auth, IAuthState} from './auth.reducer';\nimport {navigator, INavigatorState} from './navigator.reducer';\nimport {student, IStudentState} from './student.reducer';\n\nexport interface IReduxState {\n  auth: IAuthState;\n  navigator: INavigatorState;\n  student: IStudentState;\n}\n\nexport default combineReducers({\n  auth,\n  navigator,\n  student\n});\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Icon, Menu} from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport {CONTACT_PATH, PORTAL_HOME_PATH, SIGN_UP_PATH} from 'constants/routes/main.paths.constant';\nimport {IReduxState} from 'reducers';\nimport SignIn from './userAccountButton';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IProps extends IStateProps {\n  mode: 'vertical' | 'horizontal';\n}\n\nconst {Item} = Menu;\n\nconst HeaderPills: FC<IProps> = ({mode = 'horizontal', isAuthenticated}: IProps) => (\n  <div>\n    <div className='header-pill center-hv full-height'>\n      <SignIn />\n    </div>\n\n    <div className='header-pill'>\n      <Menu mode={mode} className='no-border' selectedKeys={[]}>\n        <Item key='contact'>\n          <Link to={CONTACT_PATH}>\n            <Icon type='phone' />\n            Contact Us\n          </Link>\n        </Item>\n        {isAuthenticated ? (\n          <Item key='appstore'>\n            <Link to={PORTAL_HOME_PATH}>\n              <Icon type='appstore' />\n              Placement Portal\n            </Link>\n          </Item>\n        ) : (\n          <Item key='sign-up'>\n            <Link to={SIGN_UP_PATH}>\n              <Icon type='user-add' />\n              Create New Account\n            </Link>\n          </Item>\n        )}\n      </Menu>\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(HeaderPills);\n","import React from 'react';\nimport {Drawer, Icon, Typography} from 'antd';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {selectScreen} from 'helpers/screen.helper';\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\nimport HeaderPills from './headerPills';\n\ninterface IProps {\n  history: any;\n}\n\ninterface IState {\n  visible: boolean;\n}\n\nconst {Title} = Typography;\n\nclass HeaderPillsMobile extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {visible: false};\n  }\n\n  componentDidMount(): void {\n    const {history} = this.props;\n    window.addEventListener('hashchange', this.onClose);\n    history.listen(() => {\n      this.onClose();\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('hashchange', this.onClose);\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const toRender = selectScreen(true, true, false);\n    const {visible} = this.state;\n\n    if (!toRender) return null;\n\n    return (\n      <div>\n        {/* eslint-disable-next-line max-len */}\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n        <div className='drawer-handel' onClick={this.showDrawer}>\n          <Icon type='down-circle' />\n        </div>\n        <Drawer placement='top' closable={false} onClose={this.onClose} visible={visible}>\n          <div className='center-hv'>\n            <Link to={HOME_PATH}>\n              <Title level={4}>University Placement Cell</Title>\n            </Link>\n          </div>\n          <HeaderPills mode='vertical' />\n        </Drawer>\n      </div>\n    );\n  }\n}\n\n// @ts-ignore\nexport default withRouter(HeaderPillsMobile);\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Row, Col} from 'antd';\n\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\nimport {selectScreen} from 'helpers/screen.helper';\nimport HeaderPills from './headerPills';\nimport MobileDrawer from './headerPillsMobile';\n\nconst JamiaLogo = require('assets/svgs/jamia-logo.svg');\n\ninterface IProps {}\n\ninterface IState {\n  prevScrollPos: number;\n  visible: boolean;\n}\n\nclass AppHeader extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      prevScrollPos: window.pageYOffset,\n      visible: true,\n    };\n  }\n\n  componentDidMount(): void {\n    window.addEventListener('scroll', this.handelScroll);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handelScroll);\n  }\n\n  handelScroll = () => {\n    const {prevScrollPos} = this.state;\n\n    const currentScrollPos = window.pageYOffset;\n    const {body, documentElement: html} = document;\n\n    const pageHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight,\n    );\n\n    const visible =\n      prevScrollPos > currentScrollPos ||\n      currentScrollPos < 64 ||\n      pageHeight - window.innerHeight - currentScrollPos < 64;\n\n    this.setState({\n      prevScrollPos: currentScrollPos,\n      visible,\n    });\n  };\n\n  render() {\n    const {visible} = this.state;\n\n    return (\n      <>\n        <header className={`${!visible ? 'nav-up' : ''}`}>\n          <Row style={{flex: 1}}>\n            <Link to={HOME_PATH}>\n              <Col\n                xs={24}\n                md={6}\n                xxl={4}\n                className='logo-container'\n                style={{justifyContent: selectScreen('center', 'center', null)}}>\n                <img src={JamiaLogo} alt='University Placement Cell, Logo' />\n                &nbsp;&nbsp;&nbsp;\n                <div className='black-text font09rem'>\n                  <b>University Placement Cell</b>\n                  <br />\n                  Jamia Millia Islamia\n                </div>\n              </Col>\n            </Link>\n\n            <Col xs={0} md={18} xxl={20}>\n              <HeaderPills mode='horizontal' />\n            </Col>\n          </Row>\n        </header>\n        <MobileDrawer />\n      </>\n    );\n  }\n}\n\nexport default AppHeader;\n","import React, {FC, useEffect, Suspense} from 'react';\nimport LoadingScreen from 'screens/loading.screen';\n\ninterface IProps {\n  title: string | undefined;\n  screen: any;\n}\n\nconst Screen: FC<IProps> = ({title, screen: ScreenComponent}: IProps) => {\n  useEffect(() => {\n    document.title = `${title} || University Placement Cell, Jamia Millia Islamia`;\n  }, [title]);\n\n  return (\n    <Suspense fallback={<LoadingScreen />}>\n      <ScreenComponent />\n    </Suspense>\n  );\n};\n\nexport default Screen;\n","import React, {FC} from 'react';\nimport {Typography, Row, Col, Icon} from 'antd';\nimport {\n  BUG_REPORT,\n  FEATURE_REQUEST,\n  JAMIA_MILLIA_ISLAMIA,\n  PRIVACY_POLICY,\n  REPO_LINK,\n  TERMS_AND_CONDITION,\n  UNIVERSITY_PLACEMENT_CELL,\n} from 'constants/externalLinks.constant';\nimport XLink from './xLink';\n\nimport packageJson from '../../package.json';\n\ninterface IProps {}\n\nconst {Title} = Typography;\n\nconst Footer: FC<IProps> = () => (\n  <footer>\n    <Row>\n      <Col xs={24} md={12}>\n        <Title level={4}>External links</Title>\n        <XLink href={UNIVERSITY_PLACEMENT_CELL}>Placement cell on Jamia&#39;s official site</XLink>\n        <XLink href={JAMIA_MILLIA_ISLAMIA}>Jamia Millia Islamia</XLink>\n        <XLink href={PRIVACY_POLICY}>Privacy policy</XLink>\n        <XLink href={TERMS_AND_CONDITION}>Terms and Condition</XLink>\n      </Col>\n      <Col xs={24} md={12}>\n        <Title level={4}>\nApplication v\n          {packageJson.version}\n        </Title>\n        This is an open source application.\n        <br />\n        <XLink href={REPO_LINK}>\n          <Icon type='github' />\n          &nbsp; GitHub Repository\n        </XLink>\n        <XLink href={BUG_REPORT}>Report a Bug</XLink>\n        <XLink href={FEATURE_REQUEST}>Request feature</XLink>\n      </Col>\n    </Row>\n    <br />\n    <br />\n    <div className='center-hv'>\n      <Title level={4}>&copy; 2019 University Placement Cell, Jamia Millia Islamia</Title>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport {Button, Drawer, Typography, message, Modal} from 'antd';\nimport {openNotificationWithIcon} from '../helpers/notification.helper';\nimport {selectScreen} from '../helpers/screen.helper';\n\ninterface IProps {}\n\ninterface IState {\n  installPrompt: any;\n  isA2HSVisible: boolean;\n  installing: boolean;\n}\n\nconst {Title, Text} = Typography;\n\nclass A2hsPrompt extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      installPrompt: null,\n      isA2HSVisible: false,\n      installing: false,\n    };\n  }\n\n  componentDidMount = (): void => {\n    window.addEventListener('beforeinstallprompt', this.beforeInstall);\n    window.addEventListener('appinstalled', this.onInstall);\n  };\n\n  componentWillUnmount = (): void => {\n    window.removeEventListener('beforeinstallprompt', this.beforeInstall);\n    window.removeEventListener('appinstalled', this.onInstall);\n  };\n\n  beforeInstall = (e: any): void => {\n    e.preventDefault();\n    const deferredPrompt = e;\n\n    this.setState({\n      installPrompt: deferredPrompt,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isA2HSVisible: true,\n      });\n    }, 100);\n  };\n\n  handelNotNow = () => {\n    this.setState({\n      isA2HSVisible: false,\n    });\n    openNotificationWithIcon(\n      'info',\n      'We will miss you...',\n      'In case you change your mind, go to Options > Add to Home Screen',\n    );\n  };\n\n  handelPWAInstallPrompt = (): void => {\n    const {installPrompt} = this.state;\n\n    if (installPrompt) {\n      installPrompt.prompt().then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          this.setState({\n            installing: true,\n          });\n        } else {\n          this.handelNotNow();\n        }\n      });\n    }\n  };\n\n  onInstall = (): void => {\n    message.success('Install successful');\n    this.setState({\n      installing: false,\n      isA2HSVisible: false,\n    });\n  };\n\n  toggle = (): void => {\n    const {isA2HSVisible} = this.state;\n\n    this.setState({\n      isA2HSVisible: !isA2HSVisible,\n    });\n  };\n\n  render() {\n    const {isA2HSVisible, installing} = this.state;\n    const AttentionSeeker = selectScreen(Drawer, Drawer, Modal);\n\n    return (\n      <AttentionSeeker\n        visible={isA2HSVisible}\n        placement='bottom'\n        centered\n        footer={null}\n        closable={false}>\n        <Title level={3}>Access all our job/internships offline</Title>\n        <Text>Install our web app, it wont take any space on your device.</Text>\n        <br />\n        <br />\n        <div className='center'>\n          <Button size='small' type='link' onClick={this.handelNotNow}>\n            Not Now\n          </Button>\n          <br />\n          <Button\n            loading={installing}\n            className='full-width'\n            size='large'\n            type='primary'\n            onClick={this.handelPWAInstallPrompt}>\n            {installing ? 'Installing...' : 'Install'}\n          </Button>\n        </div>\n      </AttentionSeeker>\n    );\n  }\n}\n\nexport default A2hsPrompt;\n","import React, {FC} from 'react';\nimport {Result, Button} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\n\ninterface IProps {}\n\nconst InternalErrorScreen: FC<IProps> = () => (\n  <div className='full-page center-hv'>\n    <Result\n      status='500'\n      title='500'\n      subTitle='Sorry, we encountered some error.'\n      extra={(\n        <Link to={HOME_PATH}>\n          <Button type='primary'>Back Home</Button>\n        </Link>\n      )}\n    />\n  </div>\n);\n\nexport default InternalErrorScreen;\n","/* eslint-disable */\n\nimport React from 'react';\nimport InternalErrorScreen from '../screens/500.screen';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hasError: false};\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {hasError: true};\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <InternalErrorScreen />;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, {Suspense, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Route, Switch, withRouter} from 'react-router-dom';\n\nimport {IRoute} from 'types/common.type';\n\nimport LoadingScreen from 'screens/loading.screen';\nimport NotFoundScreen from 'screens/404.screen';\nimport AppHeader from 'components/appHeader';\nimport {checkUserAction} from 'actions/auth.action';\nimport Screen from 'components/screen';\nimport Footer from 'components/footer';\nimport A2hsPrompt from './components/a2hsPrompt';\nimport ErrorBoundary from './components/errorBoundry';\n\ninterface IStateProps {\n  routes: Array<IRoute>;\n  connected: null | boolean;\n}\n\ninterface IDispatchProps {\n  checkUser(): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {\n  history: any;\n}\n\nconst Main = ({routes, checkUser, history}: IProps) => {\n  useEffect(() => {\n    checkUser();\n  }, [checkUser]);\n\n  history.listen(() => {\n    window.scrollTo(0, 0);\n  });\n\n  return (\n    <ErrorBoundary>\n      <Suspense fallback={<LoadingScreen />}>\n        <AppHeader />\n        <A2hsPrompt />\n        <main>\n          <Switch>\n            {routes.map((route, index) => (\n              <Route\n                exact={route.exact === undefined ? true : route.exact}\n                path={route.path}\n                component={() => <Screen title={route.title} screen={route.screen} />}\n                key={index.toString()}\n              />\n            ))}\n            <Route component={NotFoundScreen} />\n          </Switch>\n        </main>\n        <Footer />\n      </Suspense>\n    </ErrorBoundary>\n  );\n};\n\nconst mapStateToProps = (state: any): IStateProps => ({\n  routes: state.navigator.routes,\n  connected: state.navigator.connected,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  checkUser: () => dispatch(checkUserAction()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  // @ts-ignore\n)(withRouter(Main));\n","/**\n * @format\n * @flow\n */\n\nimport React, {Component} from 'react';\nimport {applyMiddleware, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport rootReducer from 'reducers';\nimport Main from 'main';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\ninterface IProps {}\n\ninterface IState {\n  width: number;\n}\n\nclass App extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      width: window.innerWidth,\n    };\n  }\n\n  componentDidMount = (): void => {\n    window.addEventListener('resize', this.updateDimensions);\n  };\n\n  componentWillUnmount = (): void => {\n    window.removeEventListener('resize', this.updateDimensions);\n  };\n\n  updateDimensions = (): void => {\n    const {width: oldWidth} = this.state;\n\n    if (oldWidth !== window.innerWidth) this.setState({width: window.innerWidth});\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Main />\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n University Placement Cell online Job/Internship portal (upcjmi-react-app).\n Copyright (C) 2019  University Placement Cell, Jamia Millia Islamia\n\n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2 of the License, or\n (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to University Placement Cell\n 3rd Floor, Faculty of Engineering & Technology Building\n Jamia Millia Islamia, New Delhi - 110025\n\n University Placement Cell, hereby disclaims all copyright interest in the program\n `upcjmi-react-app' is written by Faisal Manzer <faisal_manzer@yahoo.in>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\n\nimport 'styles/styles.scss';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","import axios from 'axios';\n// @ts-ignore\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport {API_TOKENS} from 'constants/localStorage.constant';\nimport {IAccessToken} from 'types/api.type';\nimport {IObject} from 'types/common.type';\nimport {API_BASE_URL} from 'constants/credentials.constant';\nimport {\n  signInAgainNotification,\n  errorGettingUserInfoNotification,\n} from 'helpers/notification.helper';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded';\n\nconst REFRESH_ACCESS_TOKEN = 'auth/token/refresh/';\n\nexport const loadOpenUrl = async (url: string, config: IObject = {}): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    axios(url, config)\n      .then(res => resolve(res.data))\n      .catch(err => reject(err.response));\n  });\n};\n\nconst getAccessToken = () => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    const data = reactLocalStorage.getObject(API_TOKENS);\n\n    if (!data) return reject('No User found');\n\n    let accessToken = '';\n    const expires = new Date(data.expires * 1000);\n    const currentTime = new Date();\n\n    if (expires > currentTime) {\n      accessToken = data.tokens.access;\n    } else {\n      try {\n        const newToken: IAccessToken = await loadOpenUrl(REFRESH_ACCESS_TOKEN, {\n          method: 'post',\n          data: {\n            refresh: data.tokens.refresh,\n          },\n        });\n        accessToken = newToken.access;\n\n        reactLocalStorage.setObject(API_TOKENS, {\n          tokens: {\n            ...data.tokens,\n            access: accessToken,\n          },\n          expires: newToken.expires,\n        });\n      } catch (e) {\n        try {\n          if (e.data.code === 'token_not_valid') signInAgainNotification();\n          else errorGettingUserInfoNotification();\n        } catch (er) {\n          // pass\n        }\n\n        return reject('Error refreshing token');\n      }\n    }\n\n    return resolve(accessToken);\n  });\n};\n\nexport const loadSecureUrl = (url: string, config: IObject = {}): Promise<any> => {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    try {\n      const data = await loadOpenUrl(url, {\n        ...config,\n        headers: {\n          Authorization: `Bearer ${await getAccessToken()}`,\n        },\n      });\n      return resolve(data);\n    } catch (e) {\n      return reject(e);\n    }\n  });\n};\n","export const API_TOKENS = 'APITokens';\nexport const SIGNED_IN_TYPE = 'SignedType';\n","export const BUG_REPORT =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app/issues/new?' +\n  'assignees=alhaqhassan&labels=bug&template=bug_report.md&title=';\n\nexport const FEATURE_REQUEST =\n  'https://github.com/Faisal-Manzer/upcjmi-react-app/issues/new?' +\n  'assignees=Faisal-Manzer&labels=enhancement&template=feature_request.md&title=';\nexport const REPO_LINK = 'https://github.com/Faisal-Manzer/upcjmi-react-app';\n\nexport const UNIVERSITY_PLACEMENT_CELL = 'https://www.jmi.ac.in/studyatjamia/cell/upc/introduction';\nexport const JAMIA_MILLIA_ISLAMIA = 'https://jmi.ac.in';\nexport const TERMS_AND_CONDITION = '/terms-and-conditions/';\nexport const PRIVACY_POLICY = '/privacy-policy/';\n","import React, {FC} from 'react';\n\ninterface IProps {\n  href: string,\n  children: any,\n  newLine?: boolean;\n}\n\nconst XLink: FC<IProps> = ({href, children, newLine=true}: IProps) => (\n  <span>\n    <a href={href} target='_blank' rel='noopener noreferrer'>\n      {children}\n    </a>\n    {newLine? <br /> : null}\n  </span>\n);\n\nexport default XLink;\n","import {Dispatch} from 'redux';\n// @ts-ignore\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\nimport {ISignInOptions} from 'types/common.type';\nimport {HOME_PATH} from 'constants/routes/main.paths.constant';\nimport {\n  openNotificationWithIcon,\n  signingInErrorNotification,\n  signInSuccessNotification,\n  signOutSuccessNotification,\n} from 'helpers/notification.helper';\nimport {\n  getUserMetaDetailAPI,\n  pingAPI,\n  signInWithEmailAPI,\n  signInWithGoogleAPI,\n} from 'helpers/api/api.helper';\nimport {API_TOKENS, SIGNED_IN_TYPE} from 'constants/localStorage.constant';\n\nimport {IAccessToken, ISignInToken, IUserMeta} from 'types/api.type';\nimport {\n  CONNECTED_WITH_SERVER,\n  COULD_NOT_CONNECT_TO_SERVER,\n  SIGN_IN_INITIATED,\n  SIGN_IN_SUCCESS,\n  SIGN_OUT,\n  SIGNING_IN_FAILED,\n} from './index';\n\nconst fakeRedirect = (): void => {};\n\nconst saveToken = (token: IAccessToken): void => {\n  reactLocalStorage.setObject(API_TOKENS, {\n    tokens: token,\n    expires: token.expires,\n  });\n};\n\nconst saveSignIn = (\n  user: IUserMeta,\n  signedWith: ISignInOptions = 'U',\n  silent: boolean = false,\n) => async (dispatch: Dispatch) => {\n  dispatch({type: SIGN_IN_SUCCESS, user, signedWith});\n  reactLocalStorage.set(SIGNED_IN_TYPE, signedWith);\n  if (!silent) signInSuccessNotification(user.name);\n};\n\nconst makeUserSignIn = (apiCall: any, signedWith: ISignInOptions = 'U') => async (\n  dispatch: Dispatch,\n) => {\n  try {\n    dispatch({type: SIGN_IN_INITIATED});\n    const {user, token}: ISignInToken = await apiCall();\n    saveToken(token);\n    dispatch({type: SIGN_IN_SUCCESS, user, signedWith});\n    saveSignIn(user, signedWith)(dispatch);\n  } catch (e) {\n    dispatch({type: SIGNING_IN_FAILED});\n    if (e && e.data !== undefined) signingInErrorNotification(e.data.detail);\n    else signingInErrorNotification(undefined);\n  }\n};\n\nexport const signInWithEmailAction = (email: string, password: string) => async (\n  dispatch: Dispatch,\n) => {\n  const apiCall = () => signInWithEmailAPI(email, password);\n  makeUserSignIn(apiCall, 'E')(dispatch);\n};\n\nexport const signInWithGoogleAction = (id: string, googleToken: string) => async (\n  dispatch: Dispatch,\n) => {\n  const apiCall = () => signInWithGoogleAPI(id, googleToken);\n  makeUserSignIn(apiCall, 'G')(dispatch);\n};\n\nexport const signIn = (account: any) => (dispatch: Dispatch) => {\n  switch (account.type) {\n    case 'E':\n      signInWithEmailAction(account.email, account.password)(dispatch);\n      break;\n    case 'G':\n      signInWithGoogleAction(account.id, account.token)(dispatch);\n      break;\n    default:\n      openNotificationWithIcon('error', 'Unknown signing');\n  }\n};\n\nconst ping = () => async (dispatch: Dispatch) => {\n  try {\n    await pingAPI();\n    dispatch({type: CONNECTED_WITH_SERVER});\n  } catch (e) {\n    dispatch({type: COULD_NOT_CONNECT_TO_SERVER});\n  }\n};\n\nexport const checkUserAction = () => async (dispatch: Dispatch) => {\n  if (reactLocalStorage.get(API_TOKENS)) {\n    try {\n      const user = await getUserMetaDetailAPI();\n      saveSignIn(user, reactLocalStorage.get(SIGNED_IN_TYPE), true)(dispatch);\n      dispatch({type: CONNECTED_WITH_SERVER});\n    } catch (e) {\n      localStorage.clear();\n      ping()(dispatch);\n    }\n  } else {\n    ping()(dispatch);\n  }\n};\n\nexport const signOutAction = (redirect: any = fakeRedirect) => (dispatch: Dispatch) => {\n  reactLocalStorage.remove(API_TOKENS);\n  dispatch({type: SIGN_OUT});\n  signOutSuccessNotification();\n  redirect(HOME_PATH);\n};\n","export const deviceType = (width: number): string => {\n  if (width < 576) return 'xs';\n  if (width < 768) return 'sm';\n  if (width < 992) return 'md';\n  if (width < 1200) return 'xl';\n\n  return 'xxl';\n};\n\nexport const selectScreen = (\n  xs: any = undefined,\n  sm: any = undefined,\n  md: any = undefined,\n  lg: any = undefined,\n  xl: any = undefined,\n  xxl: any = undefined,\n): any => {\n  const device = deviceType(window.innerWidth);\n\n  // eslint-disable-next-line no-param-reassign\n  if (sm === undefined) sm = xs;\n  // eslint-disable-next-line no-param-reassign\n  if (md === undefined) md = sm;\n  // eslint-disable-next-line no-param-reassign\n  if (lg === undefined) lg = md;\n  // eslint-disable-next-line no-param-reassign\n  if (xl === undefined) xl = lg;\n  // eslint-disable-next-line no-param-reassign\n  if (xxl === undefined) xxl = xl;\n\n  switch (device) {\n    case 'xs':\n      return xs;\n    case 'sm':\n      return sm;\n    case 'md':\n      return md;\n    case 'lg':\n      return lg;\n    case 'xl':\n      return xl;\n    case 'xxl':\n      return xxl;\n    default:\n      // logically there should be an error but will generate error if index is not mounted\n      return 0;\n  }\n};\n","import {IEmail, IPing, ISignInToken, IUserExists, IUserMeta} from 'types/api.type';\nimport {ISignUpData} from 'types/signUp.type';\nimport {IContactForm} from 'types/apiData.types';\nimport {loadOpenUrl, loadSecureUrl} from './main.api.helper';\n\nconst UPing = 'ping/';\n\nconst USignInWithEmail = 'auth/sign-in/email/';\nconst USignInWithGoogle = 'auth/sign-in/google/';\n\nconst USignUpStudent = 'student/sign-up/';\n\nconst UContact = 'contact/';\n\nconst UUserMetaDetails = 'auth/user/meta/';\nconst UUserExits = 'auth/user/exists/';\n\nconst UVerifyEmail = 'auth/verify/email/';\nconst USendVerificationMail = 'auth/verify/email/send/';\n\nexport const pingAPI = (): Promise<IPing> => loadOpenUrl(UPing);\n\nexport const signUpStudentAPI = (data: ISignUpData) =>\n  loadOpenUrl(USignUpStudent, {\n    method: 'post',\n    data,\n  });\n\nexport const signInWithEmailAPI = (email: string, password: string): Promise<ISignInToken> =>\n  loadOpenUrl(USignInWithEmail, {\n    method: 'post',\n    data: {email, password},\n  });\nexport const signInWithGoogleAPI = (id: string, token: string): Promise<ISignInToken> =>\n  loadOpenUrl(USignInWithGoogle, {\n    method: 'post',\n    data: {id, token},\n  });\n\nexport const contactFormAPI = (data: IContactForm): Promise<any> =>\n  loadOpenUrl(UContact, {\n    method: 'post',\n    data,\n  });\n\nexport const getUserMetaDetailAPI = (): Promise<IUserMeta> => loadSecureUrl(UUserMetaDetails);\nexport const doesUserExistsAPI = (email: string): Promise<IUserExists> =>\n  loadOpenUrl(UUserExits, {\n    params: {\n      email,\n    },\n  });\n\nexport const verifyEmailAPI = (hash: string): Promise<IEmail> =>\n  loadOpenUrl(UVerifyEmail, {\n    method: 'post',\n    data: {hash},\n  });\n\nexport const resendVerificationMailAPI = (): Promise<void> => loadSecureUrl(USendVerificationMail);\n","export const GOOGLE_OAUTH_CLIENT_ID = process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID;\nexport const GOOGLE_RECAPTCHA_KEY = process.env.REACT_APP_GOOGLE_RECAPTCHA_CLIENT_KEY;\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n"],"sourceRoot":""}