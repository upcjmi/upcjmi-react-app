{"version":3,"sources":["constants/allOfferedCourses.js","components/company/addRecruitment/eligibility.addRecruitment.company.tsx"],"names":["allCoursesOption","allJamiaCourses","map","category","name","courses","label","replace","value","children","course","specializations","code","Title","Option","Course","onChange","remove","defaultValue","React","useState","updateState","forceUpdate","useCallback","changeOnSelect","allowClear","options","getCourse","paddedDefaultValue","style","width","placeholder","icon","onClick","textAlign","type","EligibilityAddRecruitmentCompany","action","data","next","eligibility","setCourses","years","setYear","level","index","key","xcourses","slice","courseChange","filter","i","removeCourse","push","mode","size","length","year","openNotificationWithIcon"],"mappings":"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","file":"static/js/37.aa2822c1.chunk.js","sourcesContent":["import allJamiaCourses from 'jamia-all-courses';\n\nexport const allCoursesOption = allJamiaCourses.map(({name: category, courses}) => {\n  return {\n    label: category.replace(' Programmes', ''),\n    value: category,\n    children: courses.map(({name: course, specializations}) => {\n      return {\n        label: course,\n        value: course,\n        children: specializations.map(({name: specialization, code}) => {\n          return {\n            label: specialization,\n            value: code,\n          };\n        }),\n      };\n    }),\n  };\n});\n","import React, {FC, useState} from 'react';\nimport {Typography, Cascader, Button, Select} from 'antd';\nimport {allCoursesOption} from 'constants/allOfferedCourses';\n// @ts-ignore\nimport {getCourse} from 'jamia-all-courses';\nimport {openNotificationWithIcon} from 'helpers/notification.helper';\n\ninterface IProps {\n  action: any;\n  next: any;\n  data: any;\n}\n\ninterface ISubProps {\n  onChange: any;\n  remove: any;\n  defaultValue?: any;\n}\n\nconst {Title} = Typography;\nconst {Option} = Select;\n\nconst Course: FC<ISubProps> = ({onChange, remove, defaultValue}: ISubProps) => {\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n  const paddedDefaultValue = () => {\n    if (defaultValue) {\n      const course = getCourse(defaultValue);\n      course[2] = defaultValue;\n      return course;\n    }\n\n    return null;\n  };\n\n  return (\n    <div>\n      <Cascader\n        changeOnSelect\n        allowClear\n        options={allCoursesOption}\n        onChange={(value: Array<string>) => {\n          if (value[2]) {\n            onChange(value[2]);\n            // forceUpdate();\n          }\n        }}\n        defaultValue={paddedDefaultValue()}\n        style={{width: '90%'}}\n        placeholder='ex: Undergraduate / B.Tech. / Civil Engineering'\n      />\n      <Button\n        icon='delete'\n        onClick={() => {\n          remove();\n          forceUpdate();\n        }}\n        style={{width: '10%', textAlign: 'center'}}\n        type='link'\n      />\n    </div>\n  );\n};\n\nconst EligibilityAddRecruitmentCompany: FC<IProps> = ({action, data, next}: IProps) => {\n  const [courses, setCourses] = useState(data.eligibility.courses);\n  const [years, setYear] = useState(data.eligibility.years);\n\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  const courseChange = (index: number, value: string) => {\n    const xcourses = courses.slice();\n    // @ts-ignore\n    xcourses[index] = value;\n\n    setCourses(xcourses);\n  };\n\n  const removeCourse = (index: number) => {\n    setCourses(courses.filter((value: string, i: number) => i !== index));\n    forceUpdate();\n  };\n\n  const addCourse = () => {\n    const xcourses = courses.slice();\n    // @ts-ignore\n    xcourses.push(null);\n\n    setCourses(xcourses);\n  };\n\n  const onSave = () => {\n    if (years.length > 0 && courses.length > 0 && courses[0] !== null) {\n      action({\n        ...data,\n        eligibility: {\n          year: years,\n          courses,\n        },\n      });\n      next();\n    } else {\n      openNotificationWithIcon('error', 'At least one course/year is required');\n    }\n  };\n\n  return (\n    <div>\n      <Title level={3}>Eligibility</Title>\n      {courses.map((course: string, index: number): any => (\n        <Course\n          key={course}\n          defaultValue={course}\n          onChange={(value: string) => courseChange(index, value)}\n          remove={() => removeCourse(index)}\n        />\n      ))}\n      <br />\n      <Button icon='plus' onClick={addCourse}>\n        Add Course\n      </Button>\n      <br />\n      <br />\n      Year: &nbsp;&nbsp;&nbsp;\n      <Select\n        defaultValue={years}\n        style={{width: '100%'}}\n        onChange={(value: Array<String>) => {\n          // @ts-ignore\n          setYear(value);\n        }}\n        mode='multiple'>\n        <Option value='1' key='1'>\n          1st year\n        </Option>\n        <Option value='2' key='2'>\n          2nd year\n        </Option>\n        <Option value='3' key='3'>\n          3rd year\n        </Option>\n        <Option value='4' key='4'>\n          4th year\n        </Option>\n        <Option value='5' key='5'>\n          5th year\n        </Option>\n      </Select>\n      <br />\n      <br />\n      <div>\n        <Button style={{width: '100%'}} size='large' type='primary' onClick={onSave}>\n          Save\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default EligibilityAddRecruitmentCompany;\n"],"sourceRoot":""}