{"version":3,"sources":["screens/403.onlyPublic.tsx","constants/signUp.tsx","screens/student/signUp.student.screen.tsx"],"names":["connect","state","isAuthenticated","auth","dispatch","className","status","title","subTitle","extra","signUpNavigation","icon","component","lazy","emptyData","basic","account","Title","Step","useState","active","setActive","data","setData","SignUpComponent","style","backgroundColor","message","type","maxWidth","width","size","labelPlacement","current","slice","map","index","key","toString","fallback","next","window","scrollTo","action","previous","startAgain"],"mappings":"2QAqCeA,eAPS,SAACC,GAAD,MAA8B,CACpDC,gBAAiBD,EAAME,KAAKD,oBAIH,SAACE,GAAD,MAAoC,KAEhDJ,EAxBgB,SAAC,GAAD,IAAEE,EAAF,EAAEA,gBAAF,OAC7B,yBAAKG,UAAU,uBACb,uBACEC,OAAO,MACPC,MAAM,MACNC,SACEN,EACI,4DACA,2CAENO,MACGP,EAA+B,yDAAb,kBAAC,IAAD,YChBdQ,EAAuC,CAClD,CACEH,MAAO,UACPI,KAAM,OACNC,UAAWC,gBAAK,kBAAM,gEAExB,CACEN,MAAO,eACPI,KAAM,WACNC,UAAWC,gBAAK,kBAAM,8EAExB,CACEN,MAAO,wBACPI,KAAM,eACNC,UAAWC,gBAAK,kBAAM,8EAExB,CACEN,MAAO,mBACPI,KAAM,WACNC,UAAWC,gBAAK,kBAAM,iECXpBC,EAAY,CAChBC,MAAO,GACPC,QAAS,IAGJC,E,IAAAA,MACAC,E,IAAAA,KA8DQlB,uBAPS,SAACC,GAAD,MAAsC,CAC5DC,gBAAiBD,EAAME,KAAKD,oBAIH,SAACE,GAAD,MAAoC,KAEhDJ,EA3DyB,SAAC,GAA+B,IAA9BE,EAA6B,EAA7BA,gBAA6B,EACzCiB,mBAAS,GADgC,mBAC9DC,EAD8D,KACtDC,EADsD,OAE7CF,mBAASL,GAFoC,mBAE9DQ,EAF8D,KAExDC,EAFwD,KAIrE,GAAIrB,GAA8B,IAAXkB,EAAc,OAAO,kBAAC,EAAD,MAE5C,IASMI,EAAuBd,EAAiBU,GAAQR,UAEtD,OACE,yBAAKP,UAAU,gCAAgCoB,MAAO,CAACC,gBAAiB,YACtE,6BACE,uBACEC,QACE,sFAGFC,KAAK,OACLH,MAAO,CAACI,SAAU,OAAQC,MAAO,OAEnC,6BACA,uBAAML,MAAO,CAACI,SAAU,OAAQC,MAAO,MACrC,kBAACb,EAAD,2BACA,6BACA,uBAAOc,KAAK,QAAQC,eAAe,WAAWC,QAASb,GACpDV,EAAiBwB,MAAM,EAAG,GAAGC,KAAI,WAAgBC,GAAhB,IAAE7B,EAAF,EAAEA,MAAOI,EAAT,EAASA,KAAT,OAChC,kBAACO,EAAD,CAAMX,MAAOA,EAAOI,KAAM,uBAAMiB,KAAMjB,IAAU0B,IAAKD,EAAME,iBAG/D,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAClB,kBAACf,EAAD,CACEgB,KAjCC,WACXC,OAAOC,SAAS,EAAG,GACnBrB,EAAUD,EAAS,IAgCTuB,OAAQpB,EACRD,KAAMA,EACNsB,SAhCK,kBAAMvB,EAAUD,EAAS,IAiC9ByB,WAhCO,WACjBxB,EAAU","file":"static/js/36.a445087f.chunk.js","sourcesContent":["import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Result} from 'antd';\nimport SignIn from 'components/userAccountButton';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst OnlyPublic: FC<IProps> = ({isAuthenticated}: IProps) => (\n  <div className='full-page center-hv'>\n    <Result\n      status='403'\n      title='403'\n      subTitle={\n        isAuthenticated\n          ? \"Sorry, but you don't have permission to view this screen.\"\n          : 'You need to sign in to view this screen.'\n      }\n      extra={\n        !isAuthenticated ? <SignIn /> : 'Try signing out and signing in with different account.'\n      }\n    />\n  </div>\n);\n\nconst mapStateToProps = (state: any): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(OnlyPublic);\n","import {lazy} from 'react';\n\ninterface INavigation {\n  title: string;\n  icon: string;\n  component: any;\n}\n\nexport const signUpNavigation: Array<INavigation> = [\n  {\n    title: 'Account',\n    icon: 'user',\n    component: lazy(() => import('components/signUp/account.signUp')),\n  },\n  {\n    title: 'Basic Detail',\n    icon: 'solution',\n    component: lazy(() => import('components/signUp/basic.signUp')),\n  },\n  {\n    title: 'Verification Document',\n    icon: 'file-protect',\n    component: lazy(() => import('components/signUp/verificationDocument.signUp')),\n  },\n  {\n    title: 'Creating account',\n    icon: 'user-add',\n    component: lazy(() => import('components/signUp/creating.signUp')),\n  },\n];\n","import React, {FC, useState, Suspense} from 'react';\nimport {connect} from 'react-redux';\nimport {Card, Typography, Alert, Steps, Icon} from 'antd';\nimport {IReduxState} from 'reducers';\nimport LoadingScreen from 'screens/loading.screen';\nimport OnlyPublic from 'screens/403.onlyPublic';\nimport {signUpNavigation} from 'constants/signUp';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst emptyData = {\n  basic: {},\n  account: {},\n};\n\nconst {Title} = Typography;\nconst {Step} = Steps;\n\n// eslint-disable-next-line no-unused-vars\nconst SignUpStudentScreen: FC<IProps> = ({isAuthenticated}: IProps) => {\n  const [active, setActive] = useState(0);\n  const [data, setData] = useState(emptyData);\n\n  if (isAuthenticated && active !== 3) return <OnlyPublic />;\n\n  const next = () => {\n    window.scrollTo(0, 0);\n    setActive(active + 1);\n  };\n  const previous = () => setActive(active - 1);\n  const startAgain = () => {\n    setActive(0);\n  };\n\n  const SignUpComponent: any = signUpNavigation[active].component;\n\n  return (\n    <div className='container center-hv full-page' style={{backgroundColor: '#EEEEEE'}}>\n      <div>\n        <Alert\n          message={\n            'This is only for students. ' +\n            'If you are a company representative contact us via mail.'\n          }\n          type='info'\n          style={{maxWidth: '95vw', width: 450}}\n        />\n        <br />\n        <Card style={{maxWidth: '95vw', width: 450}}>\n          <Title>Create New Account</Title>\n          <br />\n          <Steps size='small' labelPlacement='vertical' current={active}>\n            {signUpNavigation.slice(0, 3).map(({title, icon}, index) => (\n              <Step title={title} icon={<Icon type={icon} />} key={index.toString()} />\n            ))}\n          </Steps>\n          <Suspense fallback={<LoadingScreen />}>\n            <SignUpComponent\n              next={next}\n              action={setData}\n              data={data}\n              previous={previous}\n              startAgain={startAgain}\n            />\n          </Suspense>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// eslint-disable-next-line no-unused-vars\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpStudentScreen);\n"],"sourceRoot":""}