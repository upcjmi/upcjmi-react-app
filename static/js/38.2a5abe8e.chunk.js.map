{"version":3,"sources":["helpers/api/company.api.helper.ts","components/company/addRecruitment/save.addRecruitment.company.tsx"],"names":["getAllCompaniesAPI","loadSecureUrl","getJobBasicDetailsAPI","company","getJobDetailsAPI","job","applyToJobAPI","data","method","getAllJobsAppliedAPI","saveNewJobAPI","saveCompanyExtraDataAPI","action","id","toString","allJobsByCompany","companyDetail","getAllApplications","jobId","getAllRounds","moveToNextRound","students","round","rejectApplication","placeStudent","fetchStudentResume","SaveAddRecruitmentCompany","next","useState","status","setStatus","useEffect","a","openNotificationWithIcon","save","style","height","className","tip","type","to","spinner"],"mappings":"mGACA,0gBAKaA,EAAqB,kBAA4BC,YAHxC,aAITC,EAAwB,SAACC,GAAD,OACnCF,YAAc,WAAD,OAAYE,EAAZ,WACFC,EAAmB,SAACD,EAAiBE,GAAlB,OAC9BJ,YAAc,WAAD,OAAYE,EAAZ,gBAA2BE,EAA3B,OAEFC,EAAgB,SAACH,EAAiBE,EAAaE,GAA/B,OAC3BN,YAAc,WAAD,OAAYE,EAAZ,gBAA2BE,EAA3B,WAAyC,CACpDG,OAAQ,OACRD,UAGSE,EAAuB,kBAAoBR,YAdhC,yBAgBXS,EAAgB,SAACH,GAAD,OAC3BN,YAAc,oBAAqB,CACjCO,OAAQ,OACRD,UAESI,EAA0B,SACrCJ,EACAK,EACAC,GAHqC,OAKrCZ,YAAc,GAAD,OAzBc,YAyBaY,EAAGC,WAA9B,KAA6C,CACxDN,OAAmB,SAAXI,EAAoB,QAAU,MACtCL,UAESQ,EAAmB,kBAAoBd,YAAc,sBAErDe,EAAgB,SAACH,GAAD,OAA8BZ,YAAc,YAAD,OAAaY,EAAb,OAE3DI,EAAqB,SAACC,GAAD,OAChCjB,YAAc,eAAD,OAAgBiB,EAAhB,oBAEFC,EAAe,SAACD,GAAD,OAC1BjB,YAAc,eAAD,OAAgBiB,EAAhB,cAEFE,EAAkB,SAACF,EAAeG,EAAeC,GAA/B,OAC7BrB,YAAc,eAAD,OAAgBiB,EAAhB,iBAAsC,CACjDV,OAAQ,OACRD,KAAM,CAACc,WAAUC,YAGRC,EAAoB,SAACL,EAAeG,GAAhB,OAC/BpB,YAAc,gBAAD,OAAiBiB,EAAjB,mBAAyC,CACpDV,OAAQ,OACRD,KAAM,CAACc,eAGEG,EAAe,SAACN,EAAeG,GAAhB,OAC1BpB,YAAc,gBAAD,OAAiBiB,EAAjB,kBAAwC,CACnDV,OAAQ,OACRD,KAAM,CAACc,eAGEI,EAAqB,SAACZ,GAAD,OAChCZ,YAAc,mBAAD,OAAoBY,EAApB,KAA2B,CACtCL,OAAQ,U,uJCJGkB,UAhD+B,SAAC,GAAkC,IAAjCd,EAAgC,EAAhCA,OAAQL,EAAwB,EAAxBA,KAAwB,KAAlBoB,KAChCC,mBAAS,aADyC,mBACvEC,EADuE,KAC/DC,EAD+D,KAG9EC,qBAAU,YACE,uCAAG,sBAAAC,EAAA,6DACXpB,EAAOL,GADI,kBAGHG,YAAcH,GAHX,OAIT0B,YAAyB,UAAW,aAEpCH,EAAU,SAND,gDASTG,YAAyB,QAAS,uBAClCH,EAAU,UAVD,yDAAH,qDAcVI,KACC,CAAC3B,EAAMK,IAsBV,OACE,yBAAKuB,MAAO,CAACC,OAAQ,KAAMC,UAAU,aACnC,6BAtBY,WACd,OAAQR,GACN,IAAK,WACH,OAAO,uBAAMS,IAAI,mBAEnB,IAAK,SACH,OACE,yBAAKD,UAAU,UAAf,kFAEE,6BACA,uBAAQE,KAAK,UAAb,qBAGN,IAAK,QACH,OAAO,kBAAC,IAAD,CAAUC,GAAG,MACtB,QACE,MAAO,uBAMHC","file":"static/js/38.2a5abe8e.chunk.js","sourcesContent":["import {IAllCompany, ICompanyExtraDetails} from 'types/company.api.type';\nimport {loadSecureUrl} from './main.api.helper';\n\nconst UAllCompanies = 'company/';\nconst UAllAppliedJobs = 'company/job/applied/';\nconst UCompanyExtraDetails = '/company/';\nexport const getAllCompaniesAPI = (): Promise<IAllCompany> => loadSecureUrl(UAllCompanies);\nexport const getJobBasicDetailsAPI = (company: number): Promise<any> =>\n  loadSecureUrl(`company/${company}/job/`);\nexport const getJobDetailsAPI = (company: number, job: number): Promise<any> =>\n  loadSecureUrl(`company/${company}/job/${job}/`);\n\nexport const applyToJobAPI = (company: number, job: number, data: any): Promise<any> =>\n  loadSecureUrl(`company/${company}/job/${job}/apply/`, {\n    method: 'post',\n    data,\n  });\n\nexport const getAllJobsAppliedAPI = (): Promise<any> => loadSecureUrl(UAllAppliedJobs);\n\nexport const saveNewJobAPI = (data: any): Promise<any> =>\n  loadSecureUrl(`/company/job/add/`, {\n    method: 'post',\n    data,\n  });\nexport const saveCompanyExtraDataAPI = (\n  data: ICompanyExtraDetails,\n  action: string,\n  id: number,\n): Promise<ICompanyExtraDetails> =>\n  loadSecureUrl(`${UCompanyExtraDetails + id.toString()}/`, {\n    method: action === 'edit' ? 'patch' : 'put',\n    data,\n  });\nexport const allJobsByCompany = (): Promise<any> => loadSecureUrl('/company/job/all/');\n\nexport const companyDetail = (id: number): Promise<any> => loadSecureUrl(`/company/${id}/`);\n\nexport const getAllApplications = (jobId: number): Promise<any> =>\n  loadSecureUrl(`company/job/${jobId}/applications/`);\n\nexport const getAllRounds = (jobId: number): Promise<any> =>\n  loadSecureUrl(`company/job/${jobId}/rounds/`);\n\nexport const moveToNextRound = (jobId: number, students: any, round: number): Promise<any> =>\n  loadSecureUrl(`company/job/${jobId}/select/next/`, {\n    method: 'post',\n    data: {students, round},\n  });\n\nexport const rejectApplication = (jobId: number, students: any): Promise<any> =>\n  loadSecureUrl(`/company/job/${jobId}/select/reject/`, {\n    method: 'post',\n    data: {students},\n  });\n\nexport const placeStudent = (jobId: number, students: any): Promise<any> =>\n  loadSecureUrl(`/company/job/${jobId}/select/place/`, {\n    method: 'post',\n    data: {students},\n  });\n\nexport const fetchStudentResume = (id: number,): Promise<any> =>\n  loadSecureUrl(`/student/resume/${id}/`, {\n    method: 'get',\n  });\n\n","import React, {FC, useEffect, useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {Spin, Button} from 'antd';\nimport {saveNewJobAPI} from 'helpers/api/company.api.helper';\nimport {openNotificationWithIcon} from 'helpers/notification.helper';\n\ninterface IProps {\n  action: any;\n  next: any;\n  data: any;\n}\n\nconst SaveAddRecruitmentCompany: FC<IProps> = ({action, data, next}: IProps) => {\n  const [status, setStatus] = useState('progress');\n\n  useEffect(() => {\n    const save = async () => {\n      action(data);\n      try {\n        await saveNewJobAPI(data);\n        openNotificationWithIcon('success', 'Job saved');\n\n        setStatus('saved');\n      } catch (e) {\n        console.log(e);\n        openNotificationWithIcon('error', 'Error in saving job');\n        setStatus('failed');\n      }\n    };\n\n    save();\n  }, [data, action]);\n\n  const spinner = (): any => {\n    switch (status) {\n      case 'progress':\n        return <Spin tip='Saving the job' />;\n\n      case 'failed':\n        return (\n          <div className='center'>\n            Failed to create account try again. Make sure all fields are correctly entered.\n            <br />\n            <Button type='danger'>Please Try Again</Button>\n          </div>\n        );\n      case 'saved':\n        return <Redirect to='/' />;\n      default:\n        return 'Unknown Status Code';\n    }\n  };\n\n  return (\n    <div style={{height: 600}} className='center-hv'>\n      <div>{spinner()}</div>\n    </div>\n  );\n};\n\nexport default SaveAddRecruitmentCompany;\n"],"sourceRoot":""}