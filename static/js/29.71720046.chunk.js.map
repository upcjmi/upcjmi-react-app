{"version":3,"sources":["../node_modules/jamia-all-courses/index.js","constants/allOfferedCourses.js","components/company/addRecruitment/eligibility.addRecruitment.company.tsx"],"names":["allCoursesOption","allJamiaCourses","map","category","name","courses","label","replace","value","children","course","specializations","code","Title","Option","Course","onChange","remove","options","style","width","placeholder","icon","onClick","textAlign","type","Year","defaultValue","EligibilityAddRecruitmentCompany","action","data","next","useState","year","grade_gte","grading_sys","allow_active_backlog","allow_past_backlog","eligibility","setEligibility","level","index","key","toString","xcourses","slice","courseChange","splice","removeCourse","push","years","changeYear","removeYear","float"],"mappings":"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","file":"static/js/29.71720046.chunk.js","sourcesContent":["import jamiaAllCourses from './jamia-all-courses';\nexport default jamiaAllCourses;\nexport var doctoralProgrammes = jamiaAllCourses[0];\nexport var mastersProgrammes = jamiaAllCourses[1];\nexport var postgraduateDiplomaProgrammes = jamiaAllCourses[2];\nexport var undergraduateProgrammes = jamiaAllCourses[3];\nexport var advancedDiplomaProgrammes = jamiaAllCourses[4];\nexport var diplomaProgrammes = jamiaAllCourses[5];","import allJamiaCourses from 'jamia-all-courses';\n\nexport const allCoursesOption = allJamiaCourses.map(({name: category, courses}) => {\n  return {\n    label: category.replace(' Programmes', ''),\n    value: category,\n    children: courses.map(({name: course, specializations}) => {\n      return {\n        label: course,\n        value: course,\n        children: specializations.map(({name: specialization, code}) => {\n          return {\n            label: specialization,\n            value: code,\n          };\n        }),\n      };\n    }),\n  };\n});\n","import React, {FC, useState} from 'react';\nimport {Typography, Cascader, Button, Select} from 'antd';\nimport {allCoursesOption} from 'constants/allOfferedCourses';\n\ninterface IProps {\n  action: any;\n  next: any;\n  data: any;\n}\n\ninterface ISubProps {\n  onChange: any;\n  remove: any;\n  defaultValue?: any;\n}\n\nconst {Title} = Typography;\nconst {Option} = Select;\n\nconst Course: FC<ISubProps> = ({onChange, remove}: ISubProps) => {\n  return (\n    <div>\n      <Cascader\n        options={allCoursesOption}\n        onChange={(value: Array<string>) => {\n          onChange(value[2]);\n        }}\n        style={{width: '90%'}}\n        placeholder='ex: Undergraduate / B.Tech. / Civil Engineering'\n      />\n      <Button\n        icon='delete'\n        onClick={remove}\n        style={{width: '10%', textAlign: 'center'}}\n        type='link'\n      />\n    </div>\n  );\n};\n\nconst Year: FC<ISubProps> = ({onChange, remove, defaultValue}: ISubProps) => {\n  return (\n    <>\n      <Select defaultValue={defaultValue} style={{width: 120}} onChange={onChange}>\n        <Option value='1'>1st year</Option>\n        <Option value='2'>2nd year</Option>\n        <Option value='3'>3rd year</Option>\n        <Option value='4'>4th year</Option>\n        <Option value='5'>5th year</Option>\n      </Select>\n      <Button icon='delete' onClick={remove} style={{width: 30, textAlign: 'center'}} type='link' />\n    </>\n  );\n};\n\nconst EligibilityAddRecruitmentCompany: FC<IProps> = ({action, data, next}: IProps) => {\n  const [eligibility, setEligibility] = useState({\n    courses: [''],\n    year: ['3'],\n    grade_gte: 0,\n    grading_sys: 'CPI',\n    allow_active_backlog: true,\n    allow_past_backlog: true,\n  });\n\n  console.log(eligibility);\n\n  const courseChange = (index: number, value: string) => {\n    const xcourses = eligibility.courses.slice();\n    // @ts-ignore\n    xcourses[index] = value;\n\n    setEligibility({\n      ...eligibility,\n      courses: xcourses,\n    });\n  };\n\n  const removeCourse = (index: number) => {\n    let xcourses = eligibility.courses.slice();\n    xcourses = xcourses.splice(index, 1);\n\n    setEligibility({\n      ...eligibility,\n      courses: xcourses,\n    });\n  };\n\n  const addCourse = () => {\n    const xcourses = eligibility.courses.slice();\n    // @ts-ignore\n    xcourses.push('');\n\n    setEligibility({\n      ...eligibility,\n      courses: xcourses,\n    });\n  };\n\n  const changeYear = (index: number, year: string) => {\n    const years = eligibility.year.slice();\n    years[index] = year;\n\n    setEligibility({\n      ...eligibility,\n      year: years,\n    });\n  };\n\n  const removeYear = (index: number) => {\n    let years = eligibility.year.slice();\n    years = years.splice(index, 1);\n\n    setEligibility({\n      ...eligibility,\n      year: years,\n    });\n  };\n\n  const addYear = () => {\n    const years = eligibility.year.slice();\n    // @ts-ignore\n    years.push('3');\n\n    setEligibility({\n      ...eligibility,\n      year: years,\n    });\n  };\n\n  return (\n    <div>\n      <Title level={3}>Eligibility</Title>\n      {eligibility.courses.map((course, index) => (\n        <Course\n          key={index.toString()}\n          onChange={(value: string) => courseChange(index, value)}\n          remove={() => removeCourse(index)}\n        />\n      ))}\n      <br />\n      <Button icon='plus' onClick={addCourse}>\n        Add Course\n      </Button>\n      <br />\n      <br />\n      Year: &nbsp;&nbsp;&nbsp;\n      {eligibility.year.map((year, index) => (\n        <Year\n          key={index.toString()}\n          defaultValue={year}\n          onChange={(value: string) => changeYear(index, value)}\n          remove={() => removeYear(index)}\n        />\n      ))}\n      <Button icon='plus' onClick={addYear} style={{float: 'right'}}>\n        Add Year\n      </Button>\n    </div>\n  );\n};\n\nexport default EligibilityAddRecruitmentCompany;\n"],"sourceRoot":""}