{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","screens/loadingComponent.screen.tsx","screens/403.onlyPublic.tsx","steps/companySignUp.steps.tsx","screens/company/signUp.company.screen.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","LoadingComponentScreen","className","size","tip","connect","state","isAuthenticated","auth","status","title","subTitle","extra","signUpSteps","icon","component","lazy","emptyData","basic","account","Title","Step","useState","active","setActive","data","setData","SignUpComponent","message","to","SIGN_UP_PATH_STUDENT","type","labelPlacement","current","slice","map","index","key","fallback","window","scrollTo","action","previous","startAgain"],"mappings":"mGAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,qEIWeC,IAN4B,kBACzC,yBAAKC,UAAU,oCACb,uBAAMC,KAAK,QAAQC,IAAI,kB,qFCyBZC,iBAJS,SAACC,GAAD,MAA8B,CACpDC,gBAAiBD,EAAME,KAAKD,mBAGfF,EArBgB,SAAC,GAAD,IAAEE,EAAF,EAAEA,gBAAF,OAC7B,yBAAKL,UAAU,uBACb,uBACEO,OAAO,MACPC,MAAM,MACNC,SACEJ,EACI,4DACA,2CAENK,MACGL,EAA+B,yDAAb,kBAAC,IAAD,a,2KCnBdM,EAAkC,CAC7C,CACEH,MAAO,UACPI,KAAM,OACNC,UAAWC,gBAAK,kBAAM,yDAExB,CACEN,MAAO,eACPI,KAAM,WACNC,UAAWC,gBAAK,kBAAM,8EAExB,CACEN,MAAO,mBACPI,KAAM,WACNC,UAAWC,gBAAK,kBAAM,0D,yBCLpBC,EAAY,CAChBC,MAAO,GACPC,QAAS,IAGJC,E,IAAAA,MACAC,E,IAAAA,KA8DQhB,uBALS,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKD,mBAIfF,EA5Da,SAAC,GAAuB,IAAtBE,EAAqB,EAArBA,gBAAqB,EACrBe,mBAAS,GADY,mBAC1CC,EAD0C,KAClCC,EADkC,OAEzBF,mBAASL,GAFgB,mBAE1CQ,EAF0C,KAEpCC,EAFoC,KAIjD,GAAInB,GAA8B,IAAXgB,EAAc,OAAO,kBAAC,IAAD,MAE5C,IASMI,EAAkBd,EAAYU,GAAQR,UAE5C,OACE,yBAAKb,UAAU,gDACb,6BACE,uBACE0B,QACE,mGAGE,kBAAC,IAAD,CAAMC,GAAIC,KAAV,UAGJC,KAAK,OACL7B,UAAU,0BAEZ,6BACA,uBAAMA,UAAU,yBACd,kBAACkB,EAAD,2BACA,6BACA,uBAAOjB,KAAK,QAAQ6B,eAAe,WAAWC,QAASV,GACpDV,EAAYqB,MAAM,EAAG,GAAGC,KAAI,WAAgBC,GAAhB,IAAE1B,EAAF,EAAEA,MAAOI,EAAT,EAASA,KAAT,OAC3B,kBAACO,EAAD,CAAMX,MAAOA,EAAOI,KAAM,uBAAMiB,KAAMjB,IAAUuB,IAAKD,EAAMnD,iBAG/D,kBAAC,WAAD,CAAUqD,SAAU,kBAAC,IAAD,OAClB,kBAACX,EAAD,CACEjC,KApCC,WACX6C,OAAOC,SAAS,EAAG,GACnBhB,EAAUD,EAAS,IAmCTkB,OAAQf,EACRD,KAAMA,EACNiB,SAnCK,kBAAMlB,EAAUD,EAAS,IAoC9BoB,WAnCO,WACjBnB,EAAU","file":"static/js/32.c729aeb9.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {FC} from 'react';\nimport {Spin} from 'antd';\n\ninterface IProps {}\n\nconst LoadingComponentScreen: FC<IProps> = () => (\n  <div className='full-height full-width center-hv'>\n    <Spin size='large' tip='Loading...' />\n  </div>\n);\n\nexport default LoadingComponentScreen;\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Result} from 'antd';\nimport SignIn from 'components/userAccountButton';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n}\n\ninterface IProps extends IStateProps {}\n\nconst OnlyPublic: FC<IProps> = ({isAuthenticated}: IProps) => (\n  <div className='full-page center-hv'>\n    <Result\n      status='403'\n      title='403'\n      subTitle={\n        isAuthenticated\n          ? \"Sorry, but you don't have permission to view this screen.\"\n          : 'You need to sign in to view this screen.'\n      }\n      extra={\n        !isAuthenticated ? <SignIn /> : 'Try signing out and signing in with different account.'\n      }\n    />\n  </div>\n);\n\nconst mapStateToProps = (state: any): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(OnlyPublic);\n","import {lazy} from 'react';\nimport {INavigation} from 'types/common.type';\n\nexport const signUpSteps: Array<INavigation> = [\n  {\n    title: 'Account',\n    icon: 'user',\n    component: lazy(() => import('components/student/signUp/account.signUp.student')),\n  },\n  {\n    title: 'Basic Detail',\n    icon: 'solution',\n    component: lazy(() => import('components/company/signUp/basic.signUp.company')),\n  },\n  {\n    title: 'Creating account',\n    icon: 'user-add',\n    component: lazy(() => import('components/company/signUp/creating.signUp.company')),\n  },\n];\n","import React, { useState, Suspense} from 'react';\nimport {connect} from 'react-redux';\nimport {Card, Typography, Alert, Steps, Icon} from 'antd';\nimport OnlyPublic from 'screens/403.onlyPublic';\nimport {signUpSteps} from 'steps/companySignUp.steps';\nimport LoadingComponentScreen from 'screens/loadingComponent.screen';\nimport {Link} from 'react-router-dom';\nimport {\n  SIGN_UP_PATH_STUDENT,\n} from '../../constants/routes/main.paths.constant';\n\n\nconst emptyData = {\n  basic: {},\n  account: {},\n};\n\nconst {Title} = Typography;\nconst {Step} = Steps;\n\nconst SignUpCompanyScreen = ({isAuthenticated}) => {\n  const [active, setActive] = useState(0);\n  const [data, setData] = useState(emptyData);\n\n  if (isAuthenticated && active !== 2) return <OnlyPublic />;\n\n  const next = () => {\n    window.scrollTo(0, 0);\n    setActive(active + 1);\n  };\n  const previous = () => setActive(active - 1);\n  const startAgain = () => {\n    setActive(0);\n  };\n\n  const SignUpComponent = signUpSteps[active].component;\n\n  return (\n    <div className='container center-hv full-page grey lighten-3'>\n      <div>\n        <Alert\n          message={(\n            <p>\n              This is only for company.\n              If you are a student create student account\n              <Link to={SIGN_UP_PATH_STUDENT}> here</Link>\n            </p>\n          )}\n          type='info'\n          className='auth-container-type-1'\n        />\n        <br />\n        <Card className='auth-container-type-1'>\n          <Title>Create New Account</Title>\n          <br />\n          <Steps size='small' labelPlacement='vertical' current={active}>\n            {signUpSteps.slice(0, 2).map(({title, icon}, index) => (\n              <Step title={title} icon={<Icon type={icon} />} key={index.toString()} />\n            ))}\n          </Steps>\n          <Suspense fallback={<LoadingComponentScreen />}>\n            <SignUpComponent\n              next={next}\n              action={setData}\n              data={data}\n              previous={previous}\n              startAgain={startAgain}\n            />\n          </Suspense>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps)(SignUpCompanyScreen);\n"],"sourceRoot":""}