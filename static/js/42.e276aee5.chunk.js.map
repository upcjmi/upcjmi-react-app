{"version":3,"sources":["helpers/api/company.api.helper.ts","screens/company/recruitment.company.screen.tsx"],"names":["getAllCompaniesAPI","loadSecureUrl","getJobBasicDetailsAPI","company","getJobDetailsAPI","job","applyToJobAPI","data","method","getAllJobsAppliedAPI","saveNewJobAPI","saveCompanyExtraDataAPI","action","id","toString","allJobsByCompany","companyDetail","getAllApplications","jobId","getAllRounds","moveToNextRound","students","round","rejectApplication","placeStudent","fetchStudentResume","Title","columns","title","dataIndex","key","render","to","status","color","length","text","toUpperCase","RecruitmentCompanyScreen","useState","setData","loading","setLoading","useEffect","a","openNotificationWithIcon","load","className","type","icon","dataSource"],"mappings":"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","file":"static/js/42.e276aee5.chunk.js","sourcesContent":["import {IAllCompany, ICompanyExtraDetails} from 'types/company.api.type';\nimport {loadSecureUrl} from './main.api.helper';\n\nconst UAllCompanies = 'company/';\nconst UAllAppliedJobs = 'company/job/applied/';\nconst UCompanyExtraDetails = '/company/';\nexport const getAllCompaniesAPI = (): Promise<IAllCompany> => loadSecureUrl(UAllCompanies);\nexport const getJobBasicDetailsAPI = (company: number): Promise<any> =>\n  loadSecureUrl(`company/${company}/job/`);\nexport const getJobDetailsAPI = (company: number, job: number): Promise<any> =>\n  loadSecureUrl(`company/${company}/job/${job}/`);\n\nexport const applyToJobAPI = (company: number, job: number, data: any): Promise<any> =>\n  loadSecureUrl(`company/${company}/job/${job}/apply/`, {\n    method: 'post',\n    data,\n  });\n\nexport const getAllJobsAppliedAPI = (): Promise<any> => loadSecureUrl(UAllAppliedJobs);\n\nexport const saveNewJobAPI = (data: any): Promise<any> =>\n  loadSecureUrl(`/company/job/add/`, {\n    method: 'post',\n    data,\n  });\nexport const saveCompanyExtraDataAPI = (\n  data: ICompanyExtraDetails,\n  action: string,\n  id: number,\n): Promise<ICompanyExtraDetails> =>\n  loadSecureUrl(`${UCompanyExtraDetails + id.toString()}/`, {\n    method: action === 'edit' ? 'patch' : 'put',\n    data,\n  });\nexport const allJobsByCompany = (): Promise<any> => loadSecureUrl('/company/job/all/');\n\nexport const companyDetail = (id: number): Promise<any> => loadSecureUrl(`/company/${id}/`);\n\nexport const getAllApplications = (jobId: number): Promise<any> =>\n  loadSecureUrl(`company/job/${jobId}/applications/`);\n\nexport const getAllRounds = (jobId: number): Promise<any> =>\n  loadSecureUrl(`company/job/${jobId}/rounds/`);\n\nexport const moveToNextRound = (jobId: number, students: any, round: number): Promise<any> =>\n  loadSecureUrl(`company/job/${jobId}/select/next/`, {\n    method: 'post',\n    data: {students, round},\n  });\n\nexport const rejectApplication = (jobId: number, students: any): Promise<any> =>\n  loadSecureUrl(`/company/job/${jobId}/select/reject/`, {\n    method: 'post',\n    data: {students},\n  });\n\nexport const placeStudent = (jobId: number, students: any): Promise<any> =>\n  loadSecureUrl(`/company/job/${jobId}/select/place/`, {\n    method: 'post',\n    data: {students},\n  });\n\nexport const fetchStudentResume = (id: number,): Promise<any> =>\n  loadSecureUrl(`/student/resume/${id}/`, {\n    method: 'get',\n  });\n\n","import React, {FC, useEffect, useState} from 'react';\nimport {Typography, Button, Table, Tag} from 'antd';\nimport {Link} from 'react-router-dom';\nimport {allJobsByCompany} from '../../helpers/api/company.api.helper';\nimport {openNotificationWithIcon} from '../../helpers/notification.helper';\n\ninterface IProps {}\n\nconst {Title} = Typography;\n\nconst columns = [\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title',\n    render: (title: string) => <Link to='1/'>{title}</Link>,\n  },\n  {\n    title: 'Ongoing Round',\n    dataIndex: 'current_round_name',\n    key: 'current_round_name',\n  },\n  {\n    title: 'Next Round',\n    dataIndex: 'next_round_name',\n    key: 'next_round_name',\n  },\n  {\n    title: 'Applications',\n    dataIndex: 'applications',\n    key: 'applications',\n  },\n  {\n    title: 'Status',\n    dataIndex: 'review_status',\n    key: 'review_status',\n    render: (status: string) => {\n      let color = status.length > 5 ? 'geekblue' : 'green';\n      let text = '';\n      switch (status) {\n        case 'I':\n          color = 'geekblue';\n          text = 'In Review';\n          break;\n        case 'A':\n          color = 'green';\n          text = 'Approved';\n          break;\n        case 'S':\n          color = 'green';\n          text = 'Approved';\n          break;\n        case 'R':\n          color = 'red';\n          text = 'Not Approved';\n          break;\n\n        default:\n          color = 'black';\n          text = 'Unknown';\n      }\n      return (\n        <Tag color={color} key={status}>\n          {text.toUpperCase()}\n        </Tag>\n      );\n    },\n  },\n];\n\nconst RecruitmentCompanyScreen: FC<IProps> = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const load = async () => {\n      try {\n        setData(await allJobsByCompany());\n        setLoading(false);\n        console.log(data)\n      } catch (e) {\n        console.log(e);\n        openNotificationWithIcon('error', 'An error occurred', 'Try refreshing your page');\n      }\n    };\n\n    load();\n  }, []);\n\n  return (\n    <div className='container'>\n      <Title>Recruitment</Title>\n      <Link to='/recruitment/add/'>\n        <Button type='primary' icon='plus'>\n          Add Recruitment\n        </Button>\n      </Link>\n      <br />\n      <br />\n      <Table columns={columns} dataSource={data} loading={loading} />\n    </div>\n  );\n};\n\nexport default RecruitmentCompanyScreen;\n"],"sourceRoot":""}