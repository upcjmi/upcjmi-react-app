{"version":3,"sources":["forms/signIn.form.jsx","components/auth/email.signIn.tsx","components/auth/google.signIn.tsx","components/signInCard.tsx","screens/signIn.screen.tsx"],"names":["SignInForm","handleSubmit","e","preventDefault","props","form","signIn","validateFields","err","values","email","password","this","inProgress","getFieldDecorator","onSubmit","className","id","Item","rules","required","message","type","prefix","style","color","placeholder","autoComplete","autoCapitalize","autoCorrect","htmlType","icon","href","React","Component","connect","state","auth","create","name","dispatch","signInWithEmailAction","token","signInWithGoogleAction","startSignInProcess","SIGN_IN_INITIATED","signInFailed","SIGNING_IN_FAILED","clientId","GOOGLE_OAUTH_CLIENT_ID","render","renderProps","onClick","disabled","width","backgroundColor","size","buttonText","onSuccess","response","googleId","tokenId","onFailure","cookiePolicy","Title","isAuthenticated","user","to","COMPANY_PORTAL_HOME_PATH","STUDENT_PORTAL_HOME_PATH","HOME_PATH","textAlign","SIGN_UP_PATH","SignInScreen","maxWidth"],"mappings":"kRAIMA,E,2MACJC,aAAe,SAAAC,GACbA,EAAEC,iBADgB,MAGK,EAAKC,MAArBC,EAHW,EAGXA,KAAMC,EAHK,EAGLA,QAGbC,EADyBF,EAAlBE,iBACQ,SAACC,EAAKC,GACdD,GACHF,EAAOG,EAAOC,MAAOD,EAAOE,c,wEAKzB,MAEoBC,KAAKR,MAAzBC,EAFA,EAEAA,KAAMQ,EAFN,EAEMA,WAENC,EAAqBT,EAArBS,kBAEP,OACE,uBAAMC,SAAUH,KAAKX,aAAce,UAAU,aAAaC,GAAG,gBAC3D,sBAAMC,KAAN,KACGJ,EAAkB,QAAS,CAC1BK,MAAO,CACL,CAACC,UAAU,EAAMC,QAAS,4BAC1B,CAACC,KAAM,QAASD,QAAS,0BAH5BP,CAMC,uBACES,OAAQ,uBAAMD,KAAK,OAAOE,MAAO,CAACC,MAAO,qBACzCC,YAAY,QACZJ,KAAK,QACLK,aAAa,iBACbC,eAAe,OACfC,YAAY,UAIlB,sBAAMX,KAAN,KACGJ,EAAkB,WAAY,CAC7BK,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,iCADnCP,CAGC,uBACES,OAAQ,uBAAMD,KAAK,OAAOE,MAAO,CAACC,MAAO,qBACzCH,KAAK,WACLI,YAAY,WACZC,aAAa,eAInB,sBAAMT,KAAN,KACE,uBACEY,SAAS,SACTd,UAAU,oBACVe,KAAMlB,EAAa,UAAY,SAHjC,WAOA,uBAAGG,UAAU,oBAAoBgB,KAAK,MAAtC,yB,GA3DeC,IAAMC,WAwEhBC,eAJS,SAAAC,GAAK,MAAK,CAChCvB,WAAYuB,EAAMC,KAAKxB,cAGVsB,CAAyB,IAAKG,OAAO,CAACC,KAAM,WAAnB,CAA+BvC,I,QC5CxDmC,eANS,SAACC,GAAD,MAA8B,MAE3B,SAACI,GAAD,MAAoC,CAC7DlC,OAAQ,SAACI,EAAOC,GAAR,OAAqB6B,EAASC,YAAsB/B,EAAOC,QAGtDwB,EAlBiB,SAAC/B,GAC/B,OAEE,kBAAC,EAAD,CACEE,OAAQ,SAACI,EAAeC,GACtBP,EAAME,OAAOI,EAAOC,S,yBCkDbwB,eAVS,SAACC,GAAD,MAAsC,CAC5DvB,WAAYuB,EAAMC,KAAKxB,eAGE,SAAC2B,GAAD,MAAoC,CAC7DlC,OAAQ,SAACW,EAAIyB,GAAL,OAAeF,EAASG,YAAuB1B,EAAIyB,KAC3DE,mBAAoB,kBAAMJ,EAAS,CAAClB,KAAMuB,OAC1CC,aAAc,kBAAMN,EAAS,CAAClB,KAAMyB,UAGvBZ,EA5CkB,SAAC/B,GAAmB,IAC5CS,EAAcT,EAAdS,WAEP,OACE,kBAAC,cAAD,CACEmC,SAAUC,KAA0B,GACpCC,OAAQ,SAAAC,GAAW,OACjB,uBACEC,QAAS,WACPhD,EAAMwC,qBACNO,EAAYC,WAEdC,SAAUF,EAAYE,SACtB/B,KAAK,UACLS,KAAMlB,EAAa,UAAY,SAC/BW,MAAO,CAAC8B,MAAO,OAAQC,gBAAiBJ,EAAYE,SAAU,UAAW,WACzEG,KAAK,SATP,wBAcFC,WAAW,QAEXC,UAAW,SAACC,GACVvD,EAAME,OAAOqD,EAASC,SAAUD,EAASE,UAE3CC,UAAW,WACT1D,EAAM0C,gBAERiB,aAAa,0BC7BZC,E,IAAAA,MAsCQ7B,iBALS,SAACC,GAAD,MAAsC,CAC5D6B,gBAAiB7B,EAAMC,KAAK4B,gBAC5BC,KAAM9B,EAAMC,KAAK6B,QAGJ/B,EApCgB,SAAC,GAAqC,IAApC8B,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,KAChD,GAAID,GAAmBC,EACrB,OAAQA,EAAK5C,MACX,IAAK,IACH,OAAO,kBAAC,IAAD,CAAU6C,GAAIC,MACvB,IAAK,IACH,OAAO,kBAAC,IAAD,CAAUD,GAAIE,MACvB,QACE,OAAO,kBAAC,IAAD,CAAUF,GAAIG,MAI3B,OACE,6BACE,kBAACN,EAAD,gBACA,kBAAC,EAAD,MACA,6BACA,6BACA,yBAAKxC,MAAO,CAAC+C,UAAW,WAAxB,MACA,6BACA,kBAAC,EAAD,MACA,6BACA,kBAAC,IAAD,CAAMJ,GAAIK,KACR,uBAAQlD,KAAK,SAASE,MAAO,CAAC8B,MAAO,QAASvB,KAAK,WAAWyB,KAAK,SAAnE,4B,qFCnCOiB,UARkB,kBAC/B,yBAAKzD,UAAU,sBAAsBQ,MAAO,CAAC+B,gBAAiB,YAC5D,uBAAM/B,MAAO,CAACkD,SAAU,OAAQpB,MAAO,MACrC,kBAAC,IAAD","file":"static/js/28.ebe434bf.chunk.js","sourcesContent":["import React from 'react';\nimport {Form, Icon, Input, Button} from 'antd';\nimport {connect} from 'react-redux';\n\nclass SignInForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    // eslint-disable-next-line react/prop-types\n    const {form, signIn} = this.props;\n    // eslint-disable-next-line react/prop-types\n    const {validateFields} = form;\n    validateFields((err, values) => {\n      if (!err) {\n        signIn(values.email, values.password);\n      }\n    });\n  };\n\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const {form, inProgress} = this.props;\n    // eslint-disable-next-line react/prop-types\n    const {getFieldDecorator} = form;\n\n    return (\n      <Form onSubmit={this.handleSubmit} className='login-form' id='sign-in-form'>\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [\n              {required: true, message: 'Please input your email!'},\n              {type: 'email', message: 'Enter a valid email!'},\n            ],\n          })(\n            <Input\n              prefix={<Icon type='user' style={{color: 'rgba(0,0,0,.25)'}} />}\n              placeholder='Email'\n              type='email'\n              autoComplete='username email'\n              autoCapitalize='none'\n              autoCorrect='off'\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{required: true, message: 'Please input your Password!'}],\n          })(\n            <Input\n              prefix={<Icon type='lock' style={{color: 'rgba(0,0,0,.25)'}} />}\n              type='password'\n              placeholder='Password'\n              autoComplete='password'\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            htmlType='submit'\n            className='login-form-button'\n            icon={inProgress ? 'loading' : 'login'}\n          >\n            Sign In\n          </Button>\n          <a className='login-form-forgot' href='#!'>\n            Forgot password\n          </a>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  inProgress: state.auth.inProgress,\n});\n\nexport default connect(mapStateToProps)(Form.create({name: 'sign-in'})(SignInForm));\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\n\nimport SignInForm from 'forms/signIn.form';\nimport {signInWithEmailAction} from 'actions/auth.action';\n\ninterface IStateProps {}\n\ninterface IDispatchProps {\n  signIn(email: string, password: string): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst EmailSignIn: FC<IProps> = (props: IProps) => {\n  return (\n    // @ts-ignore\n    <SignInForm\n      signIn={(email: string, password: string) => {\n        props.signIn(email, password);\n      }}\n    />\n  );\n};\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state: any): IStateProps => ({});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signIn: (email, password) => dispatch(signInWithEmailAction(email, password)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  // @ts-ignore\n)(EmailSignIn);\n","import React, {FC} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'antd';\nimport {GoogleLogin} from 'react-google-login';\n\nimport {GOOGLE_OAUTH_CLIENT_ID} from 'constants/credentials.constant';\nimport {IReduxState} from 'reducers';\nimport {signInWithGoogleAction} from 'actions/auth.action';\nimport {IAuthState} from 'reducers/auth.reducer';\nimport {IGoogleSignInResponseHacked} from 'types/api.type';\nimport {SIGN_IN_INITIATED, SIGNING_IN_FAILED} from 'actions';\n\n// eslint-disable-next-line no-undef\ninterface IStateProps extends Partial<IAuthState> {\n  inProgress: boolean;\n}\n\ninterface IDispatchProps {\n  signIn(id: string, token: string): any;\n  startSignInProcess(): any;\n  signInFailed(): any;\n}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst GoogleSignIn: FC<IProps> = (props: IProps) => {\n  const {inProgress} = props;\n\n  return (\n    <GoogleLogin\n      clientId={GOOGLE_OAUTH_CLIENT_ID || ''}\n      render={renderProps => (\n        <Button\n          onClick={() => {\n            props.startSignInProcess();\n            renderProps.onClick();\n          }}\n          disabled={renderProps.disabled}\n          type='primary'\n          icon={inProgress ? 'loading' : 'google'}\n          style={{width: '100%', backgroundColor: renderProps.disabled? '#eeeeee' :'#000000'}}\n          size='large'\n        >\n          Sign In With Google\n        </Button>\n      )}\n      buttonText='Login'\n      // @ts-ignore\n      onSuccess={(response: IGoogleSignInResponseHacked) => {\n        props.signIn(response.googleId, response.tokenId);\n      }}\n      onFailure={() => {\n        props.signInFailed();\n      }}\n      cookiePolicy='single_host_origin'\n    />\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  inProgress: state.auth.inProgress,\n});\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  signIn: (id, token) => dispatch(signInWithGoogleAction(id, token)),\n  startSignInProcess: () => dispatch({type: SIGN_IN_INITIATED}),\n  signInFailed: () => dispatch({type: SIGNING_IN_FAILED}),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GoogleSignIn);\n","import React, {FC} from 'react';\nimport {Button, Typography} from 'antd';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {IReduxState} from 'reducers';\nimport {IUserMeta} from 'types/api.type';\nimport {\n  COMPANY_PORTAL_HOME_PATH,\n  HOME_PATH,\n  SIGN_UP_PATH,\n  STUDENT_PORTAL_HOME_PATH,\n} from 'constants/routes/main.paths.constant';\nimport EmailSignIn from './auth/email.signIn';\nimport GoogleSignIn from './auth/google.signIn';\n\ninterface IStateProps {\n  isAuthenticated: boolean;\n  user: IUserMeta | undefined;\n}\n\ninterface IDispatchProps {}\n\ninterface IProps extends IStateProps, IDispatchProps {}\n\nconst {Title} = Typography;\n\nconst SignInCard: FC<IProps> = ({isAuthenticated, user}: IProps) => {\n  if (isAuthenticated && user) {\n    switch (user.type) {\n      case 'C':\n        return <Redirect to={COMPANY_PORTAL_HOME_PATH} />;\n      case 'S':\n        return <Redirect to={STUDENT_PORTAL_HOME_PATH} />;\n      default:\n        return <Redirect to={HOME_PATH} />;\n    }\n  }\n\n  return (\n    <div>\n      <Title>Sign In</Title>\n      <GoogleSignIn />\n      <br />\n      <br />\n      <div style={{textAlign: 'center'}}>OR</div>\n      <br />\n      <EmailSignIn />\n      <br />\n      <Link to={SIGN_UP_PATH}>\n        <Button type='dashed' style={{width: '100%'}} icon='user-add' size='large'>\n          Create New Account\n        </Button>\n      </Link>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IReduxState): IStateProps => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(SignInCard);\n","import React, {FC} from 'react';\nimport {Card} from 'antd';\n\nimport SignInCard from 'components/signInCard';\n\ninterface IProps {}\n\nconst SignInScreen: FC<IProps> = () => (\n  <div className='full-page center-hv' style={{backgroundColor: '#EEEEEE'}}>\n    <Card style={{maxWidth: '95vw', width: 450}}>\n      <SignInCard />\n    </Card>\n  </div>\n);\n\nexport default SignInScreen;\n"],"sourceRoot":""}